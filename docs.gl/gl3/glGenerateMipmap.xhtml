<div class="refentry"><a id="glGenerateMipmap"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glGenerateMipmap — generate mipmaps for a specified texture target</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table class="funcprototype-table" style="cellspacing: 0; cellpadding: 0;"><tr><td><code class="funcdef">void <strong class="fsfunc">glGenerateMipmap</strong>(</code></td><td>GLenum <var class="pdparam">target</var><code>)</code>;</td></tr></table><div class="funcprototype-spacer"> </div></div></div><div class="refsect1"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl class="variablelist"><dt><span class="term"><em class="parameter"><code>target</code></em></span></dt><dd><p>
                    Specifies the target to which the texture whose mimaps to generate is bound. <em class="parameter"><code>target</code></em> must
                    be <code class="constant">GL_TEXTURE_1D</code>, <code class="constant">GL_TEXTURE_2D</code>, <code class="constant">GL_TEXTURE_3D</code>,
                    <code class="constant">GL_TEXTURE_1D_ARRAY</code>, <code class="constant">GL_TEXTURE_2D_ARRAY</code> or
                    <code class="constant">GL_TEXTURE_CUBE_MAP</code>.
                </p></dd></dl></div></div><div class="refsect1"><a id="description"></a><h2>Description</h2><p>
            <code class="function">glGenerateMipmap</code> generates mipmaps for the texture attached
            to <em class="parameter"><code>target</code></em> of the active texture unit. For cube map textures,
            a <code class="constant">GL_INVALID_OPERATION</code> error is generated if the texture
            attached to <em class="parameter"><code>target</code></em> is not cube complete.
        </p><p>
            Mipmap generation replaces texel array levels
            <math overflow="scroll">

                <mrow>
                    <msub>
                        <mi mathvariant="italic">level</mi>
                        <mi>base</mi>
                    </msub>
                    <mo>+</mo>
                    <mn>1</mn>
                </mrow>
            </math>
            through
            <math overflow="scroll">
                <mrow>
                    <mi mathvariant="italic">q</mi>
                </mrow>
            </math>
            with arrays derived from the
            <math overflow="scroll">

                <mrow>
                    <msub>
                        <mi mathvariant="italic">level</mi>
                        <mi>base</mi>
                    </msub>
                </mrow>
            </math>
            array, regardless of their previous contents. All other mimap arrays,
            including the
            <math overflow="scroll">

                <mrow>
                    <msub>
                        <mi mathvariant="italic">level</mi>
                        <mi>base</mi>
                    </msub>
                </mrow>
            </math>
            array, are left unchanged by this computation.
        </p><p>
            The internal formats of the derived mipmap arrays all match those of the
            <math overflow="scroll">

                <mrow>
                    <msub>
                        <mi mathvariant="italic">level</mi>
                        <mi>base</mi>
                    </msub>
                </mrow>
            </math>
            array. The contents of the derived arrays are computed by repeated, filtered
            reduction of the
            <math overflow="scroll">

                <mrow>
                    <msub>
                        <mi mathvariant="italic">level</mi>
                        <mi>base</mi>
                    </msub>
                </mrow>
            </math>
            array. For one- and two-dimensional texture arrays, each layer is filtered
            independently.
        </p></div><div class="refsect1"><a id="errors"></a><h2>Errors</h2><p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if <em class="parameter"><code>target</code></em> is not
            one of the accepted texture targets.
        </p><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if <em class="parameter"><code>target</code></em> is
            <code class="constant">GL_TEXTURE_CUBE_MAP</code> and the texture bound to the <code class="constant">GL_TEXTURE_CUBE_MAP</code>
            target of the active texture unit is not cube complete.
        </p></div>
        {$pipelinestall}{$examples}
        <div class="refsect1"><a id="seealso"></a><h2>See Also</h2><p>
            <a class="citerefentry" href="glTexImage2D"><span class="citerefentry"><span class="refentrytitle">glTexImage2D</span></span></a>,
            <a class="citerefentry" href="glBindTexture"><span class="citerefentry"><span class="refentrytitle">glBindTexture</span></span></a>,
            <a class="citerefentry" href="glGenTextures"><span class="citerefentry"><span class="refentrytitle">glGenTextures</span></span></a>
        </p></div><div class="refsect1"><div id="Copyright"><h2>Copyright</h2><p>
            Copyright © 2010 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <a class="ulink" href="https://opencontent.org/openpub/" target="_top">https://opencontent.org/openpub/</a>.
        </p></div></div></div>
