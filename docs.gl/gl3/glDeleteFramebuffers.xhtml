<div class="refentry"><a id="glDeleteFramebuffers"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glDeleteFramebuffers — delete framebuffer objects</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table class="funcprototype-table" style="cellspacing: 0; cellpadding: 0;"><tr><td><code class="funcdef">void <strong class="fsfunc">glDeleteFramebuffers</strong>(</code></td><td>GLsizei <var class="pdparam">n</var>, </td></tr><tr><td> </td><td>GLuint *<var class="pdparam">framebuffers</var><code>)</code>;</td></tr></table><div class="funcprototype-spacer"> </div></div></div><div class="refsect1"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl class="variablelist"><dt><span class="term"><em class="parameter"><code>n</code></em></span></dt><dd><p>
                    Specifies the number of framebuffer objects to be deleted.
                </p></dd><dt><span class="term"><em class="parameter"><code>framebuffers</code></em></span></dt><dd><p>
                    A pointer to an array containing <em class="parameter"><code>n</code></em> framebuffer objects to be deleted.
                </p></dd></dl></div></div><div class="refsect1"><a id="description"></a><h2>Description</h2><p>
            <code class="function">glDeleteFramebuffers</code> deletes the <em class="parameter"><code>n</code></em> framebuffer objects whose names are stored in
            the array addressed by <em class="parameter"><code>framebuffers</code></em>. The name zero is reserved by the GL and is silently ignored, should it
            occur in <em class="parameter"><code>framebuffers</code></em>, as are other unused names. Once a framebuffer object is deleted, its name is again
            unused and it has no attachments. If a framebuffer that is currently bound to one or more of the targets <code class="constant">GL_DRAW_FRAMEBUFFER</code>
            or <code class="constant">GL_READ_FRAMEBUFFER</code> is deleted, it is as though <a class="citerefentry" href="glBindFramebuffer"><span class="citerefentry"><span class="refentrytitle">glBindFramebuffer</span></span></a>
            had been executed with the corresponding <em class="parameter"><code>target</code></em> and <em class="parameter"><code>framebuffer</code></em> zero.
        </p></div><div class="refsect1"><a id="errors"></a><h2>Errors</h2><p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if <em class="parameter"><code>n</code></em> is negative.
        </p></div>
        {$pipelinestall}{$examples}
        <div class="refsect1"><a id="seealso"></a><h2>See Also</h2><p>
            <a class="citerefentry" href="glGenFramebuffers"><span class="citerefentry"><span class="refentrytitle">glGenFramebuffers</span></span></a>,
            <a class="citerefentry" href="glBindFramebuffer"><span class="citerefentry"><span class="refentrytitle">glBindFramebuffer</span></span></a>,
            <a class="citerefentry" href="glCheckFramebufferStatus"><span class="citerefentry"><span class="refentrytitle">glCheckFramebufferStatus</span></span></a>
        </p></div><div class="refsect1"><div id="Copyright"><h2>Copyright</h2><p>
            Copyright © 2010 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <a class="ulink" href="https://opencontent.org/openpub/" target="_top">https://opencontent.org/openpub/</a>.
        </p></div></div></div>
