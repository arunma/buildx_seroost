<div class="refentry" lang="en" xml:lang="en"><a id="glMultiTexCoord"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glMultiTexCoord — set the current texture coordinates</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord1s</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>GLshort  </td><td><var class="pdparam">s</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord1i</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>GLint  </td><td><var class="pdparam">s</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord1f</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>GLfloat  </td><td><var class="pdparam">s</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord1d</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>GLdouble  </td><td><var class="pdparam">s</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord2s</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>GLshort  </td><td><var class="pdparam">s</var>, </td></tr><tr><td> </td><td>GLshort  </td><td><var class="pdparam">t</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord2i</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>GLint  </td><td><var class="pdparam">s</var>, </td></tr><tr><td> </td><td>GLint  </td><td><var class="pdparam">t</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord2f</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>GLfloat  </td><td><var class="pdparam">s</var>, </td></tr><tr><td> </td><td>GLfloat  </td><td><var class="pdparam">t</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord2d</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>GLdouble  </td><td><var class="pdparam">s</var>, </td></tr><tr><td> </td><td>GLdouble  </td><td><var class="pdparam">t</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord3s</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>GLshort  </td><td><var class="pdparam">s</var>, </td></tr><tr><td> </td><td>GLshort  </td><td><var class="pdparam">t</var>, </td></tr><tr><td> </td><td>GLshort  </td><td><var class="pdparam">r</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord3i</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>GLint  </td><td><var class="pdparam">s</var>, </td></tr><tr><td> </td><td>GLint  </td><td><var class="pdparam">t</var>, </td></tr><tr><td> </td><td>GLint  </td><td><var class="pdparam">r</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord3f</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>GLfloat  </td><td><var class="pdparam">s</var>, </td></tr><tr><td> </td><td>GLfloat  </td><td><var class="pdparam">t</var>, </td></tr><tr><td> </td><td>GLfloat  </td><td><var class="pdparam">r</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord3d</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>GLdouble  </td><td><var class="pdparam">s</var>, </td></tr><tr><td> </td><td>GLdouble  </td><td><var class="pdparam">t</var>, </td></tr><tr><td> </td><td>GLdouble  </td><td><var class="pdparam">r</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord4s</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>GLshort  </td><td><var class="pdparam">s</var>, </td></tr><tr><td> </td><td>GLshort  </td><td><var class="pdparam">t</var>, </td></tr><tr><td> </td><td>GLshort  </td><td><var class="pdparam">r</var>, </td></tr><tr><td> </td><td>GLshort  </td><td><var class="pdparam">q</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord4i</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>GLint  </td><td><var class="pdparam">s</var>, </td></tr><tr><td> </td><td>GLint  </td><td><var class="pdparam">t</var>, </td></tr><tr><td> </td><td>GLint  </td><td><var class="pdparam">r</var>, </td></tr><tr><td> </td><td>GLint  </td><td><var class="pdparam">q</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord4f</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>GLfloat  </td><td><var class="pdparam">s</var>, </td></tr><tr><td> </td><td>GLfloat  </td><td><var class="pdparam">t</var>, </td></tr><tr><td> </td><td>GLfloat  </td><td><var class="pdparam">r</var>, </td></tr><tr><td> </td><td>GLfloat  </td><td><var class="pdparam">q</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord4d</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>GLdouble  </td><td><var class="pdparam">s</var>, </td></tr><tr><td> </td><td>GLdouble  </td><td><var class="pdparam">t</var>, </td></tr><tr><td> </td><td>GLdouble  </td><td><var class="pdparam">r</var>, </td></tr><tr><td> </td><td>GLdouble  </td><td><var class="pdparam">q</var><code>)</code>;</td></tr></table></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl><dt><span class="term"><em class="parameter"><code>target</code></em></span></dt><dd><p>
                    Specifies the texture unit whose coordinates should be modified. The number
                    of texture units is implementation dependent, but must be at least
                    two. Symbolic constant must be one of
                    <code class="constant">GL_TEXTURE</code><math overflow="scroll"><mi mathvariant="italic">i</mi></math>,
                    where i ranges from 0 to <code class="constant">GL_MAX_TEXTURE_COORDS</code> - 1,
                    which is an implementation-dependent value.
                </p></dd><dt><span class="term"><em class="parameter"><code>s</code></em>, </span><span class="term"><em class="parameter"><code>t</code></em>, </span><span class="term"><em class="parameter"><code>r</code></em>, </span><span class="term"><em class="parameter"><code>q</code></em></span></dt><dd><p>
                    Specify <em class="parameter"><code>s</code></em>, <em class="parameter"><code>t</code></em>, <em class="parameter"><code>r</code></em>, and <em class="parameter"><code>q</code></em> texture coordinates for
                    <em class="parameter"><code>target</code></em> texture unit. Not all parameters are present in all forms
                    of the command.
                </p></dd></dl></div></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord1sv</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>const GLshort *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord1iv</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>const GLint *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord1fv</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>const GLfloat *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord1dv</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>const GLdouble *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord2sv</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>const GLshort *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord2iv</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>const GLint *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord2fv</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>const GLfloat *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord2dv</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>const GLdouble *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord3sv</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>const GLshort *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord3iv</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>const GLint *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord3fv</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>const GLfloat *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord3dv</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>const GLdouble *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord4sv</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>const GLshort *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord4iv</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>const GLint *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord4fv</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>const GLfloat *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMultiTexCoord4dv</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>const GLdouble *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="parameters2"></a><h2>Parameters</h2><div class="variablelist"><dl><dt><span class="term"><em class="parameter"><code>target</code></em></span></dt><dd><p>
                    Specifies the texture unit whose coordinates should be modified. The number
                    of texture units is implementation dependent, but must be at least
                    two. Symbolic constant must be one of
                    <code class="constant">GL_TEXTURE</code><math overflow="scroll"><mi mathvariant="italic">i</mi></math>,
                    where i ranges from 0 to <code class="constant">GL_MAX_TEXTURE_COORDS</code> - 1,
                    which is an implementation-dependent value.
                </p></dd><dt><span class="term"><em class="parameter"><code>v</code></em></span></dt><dd><p>
                    Specifies a pointer to an array of one, two, three, or four elements,
                    which in turn specify the
                    <math overflow="scroll"><mi mathvariant="italic">s</mi></math>,
                    <math overflow="scroll"><mi mathvariant="italic">t</mi></math>,
                    <math overflow="scroll"><mi mathvariant="italic">r</mi></math>,
                    and
                    <math overflow="scroll"><mi mathvariant="italic">q</mi></math>
                    texture coordinates.
                </p></dd></dl></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="description"></a><h2>Description</h2><p>
            <code class="function">glMultiTexCoord</code> specifies texture coordinates in one, two, three, or four
            dimensions.
            <code class="function">glMultiTexCoord1</code> sets the current texture
            coordinates to
            <math overflow="scroll">

                <mfenced open="(" close=")">
                    <mi mathvariant="italic">s</mi>
                    <mn>0</mn>
                    <mn>0</mn>
                    <mn>1</mn>
                </mfenced>
            </math>;
            a call to <code class="function">glMultiTexCoord2</code>
            sets them to
            <math overflow="scroll">

                <mfenced open="(" close=")">
                    <mi mathvariant="italic">s</mi>
                    <mi mathvariant="italic">t</mi>
                    <mn>0</mn>
                    <mn>1</mn>
                </mfenced>
            </math>.
            Similarly, <code class="function">glMultiTexCoord3</code> specifies the texture coordinates as
            <math overflow="scroll">

                <mfenced open="(" close=")">
                    <mi mathvariant="italic">s</mi>
                    <mi mathvariant="italic">t</mi>
                    <mi mathvariant="italic">r</mi>
                    <mn>1</mn>
                </mfenced>
            </math>,
            and
            <code class="function">glMultiTexCoord4</code>
            defines all four components explicitly as
            <math overflow="scroll">

                <mfenced open="(" close=")">
                    <mi mathvariant="italic">s</mi>
                    <mi mathvariant="italic">t</mi>
                    <mi mathvariant="italic">r</mi>
                    <mi mathvariant="italic">q</mi>
                </mfenced>
            </math>.
        </p><p>
            The current texture coordinates are part of the data
            that is associated with each vertex and with the current
            raster position.
            Initially, the values for
            <math overflow="scroll">

                <mfenced open="(" close=")">
                    <mi mathvariant="italic">s</mi>
                    <mi mathvariant="italic">t</mi>
                    <mi mathvariant="italic">r</mi>
                    <mi mathvariant="italic">q</mi>
                </mfenced>
            </math>
            are
            <math overflow="scroll">

                <mfenced open="(" close=")">
                    <mn>0</mn>
                    <mn>0</mn>
                    <mn>0</mn>
                    <mn>1</mn>
                </mfenced>
            </math>.
        </p><p>
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="notes"></a><h2>Notes</h2><p>
            <code class="function">glMultiTexCoord</code> is only supported if the GL version is 1.3 or greater, or if
            <code class="code">ARB_multitexture</code> is included in the string returned by
            <a class="citerefentry" href="glGetString"><span class="citerefentry"><span class="refentrytitle">glGetString</span></span></a> when called with the argument <code class="constant">GL_EXTENSIONS</code>.
        </p><p>
            The current texture coordinates can be updated at any time.
            In particular,
            <code class="function">glMultiTexCoord</code> can be called between a call to <a class="citerefentry" href="glBegin"><span class="citerefentry"><span class="refentrytitle">glBegin</span></span></a> and the corresponding
            call to <a class="citerefentry" href="glEnd"><span class="citerefentry"><span class="refentrytitle">glEnd</span></span></a>.
        </p><p>
            It is always the case that <code class="constant">GL_TEXTURE</code>
            <math overflow="scroll"><mi mathvariant="italic">i</mi></math>
            = <code class="constant">GL_TEXTURE0</code> +
            <math overflow="scroll"><mi mathvariant="italic">i</mi></math>.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="associatedgets"></a><h2>Associated Gets</h2><p>
            <a class="citerefentry" href="glGet"><span class="citerefentry"><span class="refentrytitle">glGet</span></span></a> with argument <code class="constant">GL_CURRENT_TEXTURE_COORDS</code> with appropriate
            texture unit selected.
        </p><p>
            <a class="citerefentry" href="glGet"><span class="citerefentry"><span class="refentrytitle">glGet</span></span></a> with argument <code class="constant">GL_MAX_TEXTURE_COORDS</code>
        </p></div>
        {$pipelinestall}{$examples}
        <div class="refsect1" lang="en" xml:lang="en"><a id="seealso"></a><h2>See Also</h2><p>
            <a class="citerefentry" href="glActiveTexture"><span class="citerefentry"><span class="refentrytitle">glActiveTexture</span></span></a>,
            <a class="citerefentry" href="glClientActiveTexture"><span class="citerefentry"><span class="refentrytitle">glClientActiveTexture</span></span></a>,
            <a class="citerefentry" href="glTexCoord"><span class="citerefentry"><span class="refentrytitle">glTexCoord</span></span></a>,
            <a class="citerefentry" href="glTexCoordPointer"><span class="citerefentry"><span class="refentrytitle">glTexCoordPointer</span></span></a>,
            <a class="citerefentry" href="glVertex"><span class="citerefentry"><span class="refentrytitle">glVertex</span></span></a>
        </p></div><div class="refsect1" lang="en" xml:lang="en"><div id="Copyright"><h2>Copyright</h2><p>
            Copyright © 1991-2006
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <a class="ulink" href="https://web.archive.org/web/20171022161616/http://oss.sgi.com/projects/FreeB/" target="_top">https://web.archive.org/web/20171022161616/http://oss.sgi.com/projects/FreeB/</a>.
        </p></div></div></div>
