<div class="refentry" lang="en" xml:lang="en"><a id="glRasterPos"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glRasterPos — specify the raster position for pixel operations</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glRasterPos2s</b>(</code></td><td>GLshort  </td><td><var class="pdparam">x</var>, </td></tr><tr><td> </td><td>GLshort  </td><td><var class="pdparam">y</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glRasterPos2i</b>(</code></td><td>GLint  </td><td><var class="pdparam">x</var>, </td></tr><tr><td> </td><td>GLint  </td><td><var class="pdparam">y</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glRasterPos2f</b>(</code></td><td>GLfloat  </td><td><var class="pdparam">x</var>, </td></tr><tr><td> </td><td>GLfloat  </td><td><var class="pdparam">y</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glRasterPos2d</b>(</code></td><td>GLdouble  </td><td><var class="pdparam">x</var>, </td></tr><tr><td> </td><td>GLdouble  </td><td><var class="pdparam">y</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glRasterPos3s</b>(</code></td><td>GLshort  </td><td><var class="pdparam">x</var>, </td></tr><tr><td> </td><td>GLshort  </td><td><var class="pdparam">y</var>, </td></tr><tr><td> </td><td>GLshort  </td><td><var class="pdparam">z</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glRasterPos3i</b>(</code></td><td>GLint  </td><td><var class="pdparam">x</var>, </td></tr><tr><td> </td><td>GLint  </td><td><var class="pdparam">y</var>, </td></tr><tr><td> </td><td>GLint  </td><td><var class="pdparam">z</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glRasterPos3f</b>(</code></td><td>GLfloat  </td><td><var class="pdparam">x</var>, </td></tr><tr><td> </td><td>GLfloat  </td><td><var class="pdparam">y</var>, </td></tr><tr><td> </td><td>GLfloat  </td><td><var class="pdparam">z</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glRasterPos3d</b>(</code></td><td>GLdouble  </td><td><var class="pdparam">x</var>, </td></tr><tr><td> </td><td>GLdouble  </td><td><var class="pdparam">y</var>, </td></tr><tr><td> </td><td>GLdouble  </td><td><var class="pdparam">z</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glRasterPos4s</b>(</code></td><td>GLshort  </td><td><var class="pdparam">x</var>, </td></tr><tr><td> </td><td>GLshort  </td><td><var class="pdparam">y</var>, </td></tr><tr><td> </td><td>GLshort  </td><td><var class="pdparam">z</var>, </td></tr><tr><td> </td><td>GLshort  </td><td><var class="pdparam">w</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glRasterPos4i</b>(</code></td><td>GLint  </td><td><var class="pdparam">x</var>, </td></tr><tr><td> </td><td>GLint  </td><td><var class="pdparam">y</var>, </td></tr><tr><td> </td><td>GLint  </td><td><var class="pdparam">z</var>, </td></tr><tr><td> </td><td>GLint  </td><td><var class="pdparam">w</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glRasterPos4f</b>(</code></td><td>GLfloat  </td><td><var class="pdparam">x</var>, </td></tr><tr><td> </td><td>GLfloat  </td><td><var class="pdparam">y</var>, </td></tr><tr><td> </td><td>GLfloat  </td><td><var class="pdparam">z</var>, </td></tr><tr><td> </td><td>GLfloat  </td><td><var class="pdparam">w</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glRasterPos4d</b>(</code></td><td>GLdouble  </td><td><var class="pdparam">x</var>, </td></tr><tr><td> </td><td>GLdouble  </td><td><var class="pdparam">y</var>, </td></tr><tr><td> </td><td>GLdouble  </td><td><var class="pdparam">z</var>, </td></tr><tr><td> </td><td>GLdouble  </td><td><var class="pdparam">w</var><code>)</code>;</td></tr></table></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl><dt><span class="term"><em class="parameter"><code>x</code></em>, </span><span class="term"><em class="parameter"><code>y</code></em>, </span><span class="term"><em class="parameter"><code>z</code></em>, </span><span class="term"><em class="parameter"><code>w</code></em></span></dt><dd><p>
                    Specify the
                    <math overflow="scroll"><mi mathvariant="italic">x</mi></math>,
                    <math overflow="scroll"><mi mathvariant="italic">y</mi></math>,
                    <math overflow="scroll"><mi mathvariant="italic">z</mi></math>,
                    and
                    <math overflow="scroll"><mi mathvariant="italic">w</mi></math>
                    object coordinates
                    (if present)
                    for the raster
                    position.
                </p></dd></dl></div></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glRasterPos2sv</b>(</code></td><td>const GLshort *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glRasterPos2iv</b>(</code></td><td>const GLint *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glRasterPos2fv</b>(</code></td><td>const GLfloat *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glRasterPos2dv</b>(</code></td><td>const GLdouble *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glRasterPos3sv</b>(</code></td><td>const GLshort *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glRasterPos3iv</b>(</code></td><td>const GLint *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glRasterPos3fv</b>(</code></td><td>const GLfloat *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glRasterPos3dv</b>(</code></td><td>const GLdouble *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glRasterPos4sv</b>(</code></td><td>const GLshort *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glRasterPos4iv</b>(</code></td><td>const GLint *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glRasterPos4fv</b>(</code></td><td>const GLfloat *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glRasterPos4dv</b>(</code></td><td>const GLdouble *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="parameters2"></a><h2>Parameters</h2><div class="variablelist"><dl><dt><span class="term"><em class="parameter"><code>v</code></em></span></dt><dd><p>
                    Specifies a pointer to an array of two,
                    three,
                    or four elements,
                    specifying
                    <math overflow="scroll"><mi mathvariant="italic">x</mi></math>,
                    <math overflow="scroll"><mi mathvariant="italic">y</mi></math>,
                    <math overflow="scroll"><mi mathvariant="italic">z</mi></math>,
                    and
                    <math overflow="scroll"><mi mathvariant="italic">w</mi></math>
                    coordinates, respectively.
                </p></dd></dl></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="description"></a><h2>Description</h2><p>
            The GL maintains a 3D position in window coordinates.
            This position,
            called the raster position,
            is used to position pixel and bitmap write operations. It is
            maintained with subpixel accuracy.
            See <a class="citerefentry" href="glBitmap"><span class="citerefentry"><span class="refentrytitle">glBitmap</span></span></a>, <a class="citerefentry" href="glDrawPixels"><span class="citerefentry"><span class="refentrytitle">glDrawPixels</span></span></a>, and <a class="citerefentry" href="glCopyPixels"><span class="citerefentry"><span class="refentrytitle">glCopyPixels</span></span></a>.
        </p><p>
            The current raster position consists of three window coordinates
            (<math overflow="scroll"><mi mathvariant="italic">x</mi></math>,
            <math overflow="scroll"><mi mathvariant="italic">y</mi></math>,
            <math overflow="scroll"><mi mathvariant="italic">z</mi></math>),
            a clip coordinate value
            (<math overflow="scroll"><mi mathvariant="italic">w</mi></math>),
            an eye coordinate distance,
            a valid bit,
            and associated color data and texture coordinates.
            The
            <math overflow="scroll"><mi mathvariant="italic">w</mi></math>
            coordinate is a clip coordinate,
            because
            <math overflow="scroll"><mi mathvariant="italic">w</mi></math>
            is not projected to window coordinates.
            <code class="function">glRasterPos4</code> specifies object coordinates
            <math overflow="scroll"><mi mathvariant="italic">x</mi></math>,
            <math overflow="scroll"><mi mathvariant="italic">y</mi></math>,
            <math overflow="scroll"><mi mathvariant="italic">z</mi></math>,
            and
            <math overflow="scroll"><mi mathvariant="italic">w</mi></math>
            explicitly.
            <code class="function">glRasterPos3</code> specifies object coordinate
            <math overflow="scroll"><mi mathvariant="italic">x</mi></math>,
            <math overflow="scroll"><mi mathvariant="italic">y</mi></math>,
            and
            <math overflow="scroll"><mi mathvariant="italic">z</mi></math>
            explicitly,
            while
            <math overflow="scroll"><mi mathvariant="italic">w</mi></math>
            is implicitly set to 1.
            <code class="function">glRasterPos2</code> uses the argument values for
            <math overflow="scroll"><mi mathvariant="italic">x</mi></math>
            and
            <math overflow="scroll"><mi mathvariant="italic">y</mi></math>
            while
            implicitly setting
            <math overflow="scroll"><mi mathvariant="italic">z</mi></math>
            and
            <math overflow="scroll"><mi mathvariant="italic">w</mi></math>
            to 0 and 1.
        </p><p>
            The object coordinates presented by <code class="function">glRasterPos</code> are treated just like those
            of a <a class="citerefentry" href="glVertex"><span class="citerefentry"><span class="refentrytitle">glVertex</span></span></a> command:
            They are transformed by the current modelview and projection matrices
            and passed to the clipping stage.
            If the vertex is not culled,
            then it is projected and scaled to window coordinates,
            which become the new current raster position,
            and the <code class="constant">GL_CURRENT_RASTER_POSITION_VALID</code> flag is set.
            If the vertex
            <span class="emphasis"><em>is</em></span>
            culled,
            then the valid bit is cleared and the current raster position
            and associated color and texture coordinates are undefined.
        </p><p>
            The current raster position also includes some associated color data
            and texture coordinates.
            If lighting is enabled,
            then <code class="constant">GL_CURRENT_RASTER_COLOR</code>
            (in RGBA mode)
            or <code class="constant">GL_CURRENT_RASTER_INDEX</code>
            (in color index mode)
            is set to the color produced by the lighting calculation
            (see <a class="citerefentry" href="glLight"><span class="citerefentry"><span class="refentrytitle">glLight</span></span></a>, <a class="citerefentry" href="glLightModel"><span class="citerefentry"><span class="refentrytitle">glLightModel</span></span></a>, and
            <a class="citerefentry" href="glShadeModel"><span class="citerefentry"><span class="refentrytitle">glShadeModel</span></span></a>).
            If lighting is disabled,
            current color
            (in RGBA mode, state variable <code class="constant">GL_CURRENT_COLOR</code>)
            or color index
            (in color index mode, state variable <code class="constant">GL_CURRENT_INDEX</code>)
            is used to update the current raster color.
            <code class="constant">GL_CURRENT_RASTER_SECONDARY_COLOR</code> (in RGBA mode) is likewise updated.
        </p><p>
            Likewise,
            <code class="constant">GL_CURRENT_RASTER_TEXTURE_COORDS</code> is updated as a function
            of <code class="constant">GL_CURRENT_TEXTURE_COORDS</code>,
            based on the texture matrix and the texture generation functions
            (see <a class="citerefentry" href="glTexGen"><span class="citerefentry"><span class="refentrytitle">glTexGen</span></span></a>).
            Finally,
            the distance from the origin of the eye coordinate system to the
            vertex as transformed by only the modelview matrix replaces
            <code class="constant">GL_CURRENT_RASTER_DISTANCE</code>.
        </p><p>
            Initially, the current raster position is (0, 0, 0, 1),
            the current raster distance is 0,
            the valid bit is set,
            the associated RGBA color is (1, 1, 1, 1),
            the associated color index is 1,
            and the associated texture coordinates are (0, 0, 0, 1).
            In RGBA mode,
            <code class="constant">GL_CURRENT_RASTER_INDEX</code> is always 1;
            in color index mode,
            the current raster RGBA color always maintains its initial value.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="notes"></a><h2>Notes</h2><p>
            The raster position is modified by <code class="function">glRasterPos</code>, <a class="citerefentry" href="glBitmap"><span class="citerefentry"><span class="refentrytitle">glBitmap</span></span></a>, and <a class="citerefentry" href="glWindowPos"><span class="citerefentry"><span class="refentrytitle">glWindowPos</span></span></a>.
        </p><p>
            When the raster position coordinates are invalid,
            drawing commands that are based on the raster position are
            ignored (that is, they do not result in changes to GL state).
        </p><p>
            Calling <a class="citerefentry" href="glDrawElements"><span class="citerefentry"><span class="refentrytitle">glDrawElements</span></span></a> or <a class="citerefentry" href="glDrawRangeElements"><span class="citerefentry"><span class="refentrytitle">glDrawRangeElements</span></span></a> may leave the
            current color or index indeterminate.
            If <code class="function">glRasterPos</code> is executed while the current color or index is indeterminate, the
            current raster color or current raster index remains indeterminate.
        </p><p>
            To set a valid raster position outside the viewport, first set a valid
            raster position, then call <a class="citerefentry" href="glBitmap"><span class="citerefentry"><span class="refentrytitle">glBitmap</span></span></a> with NULL as the <span class="emphasis"><em>bitmap</em></span>
            parameter.
        </p><p>
            When the <code class="code">ARB_imaging</code> extension is supported, there are distinct
            raster texture coordinates for each texture unit. Each texture unit's
            current raster texture coordinates are updated by <code class="function">glRasterPos</code>.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="errors"></a><h2>Errors</h2><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if <code class="function">glRasterPos</code>
            is executed between the execution of <a class="citerefentry" href="glBegin"><span class="citerefentry"><span class="refentrytitle">glBegin</span></span></a>
            and the corresponding execution of <a class="citerefentry" href="glEnd"><span class="citerefentry"><span class="refentrytitle">glEnd</span></span></a>.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="associatedgets"></a><h2>Associated Gets</h2><p>
            <a class="citerefentry" href="glGet"><span class="citerefentry"><span class="refentrytitle">glGet</span></span></a> with argument <code class="constant">GL_CURRENT_RASTER_POSITION</code>
        </p><p>
            <a class="citerefentry" href="glGet"><span class="citerefentry"><span class="refentrytitle">glGet</span></span></a> with argument <code class="constant">GL_CURRENT_RASTER_POSITION_VALID</code>
        </p><p>
            <a class="citerefentry" href="glGet"><span class="citerefentry"><span class="refentrytitle">glGet</span></span></a> with argument <code class="constant">GL_CURRENT_RASTER_DISTANCE</code>
        </p><p>
            <a class="citerefentry" href="glGet"><span class="citerefentry"><span class="refentrytitle">glGet</span></span></a> with argument <code class="constant">GL_CURRENT_RASTER_COLOR</code>
        </p><p>
            <a class="citerefentry" href="glGet"><span class="citerefentry"><span class="refentrytitle">glGet</span></span></a> with argument <code class="constant">GL_CURRENT_RASTER_SECONDARY_COLOR</code>
        </p><p>
            <a class="citerefentry" href="glGet"><span class="citerefentry"><span class="refentrytitle">glGet</span></span></a> with argument <code class="constant">GL_CURRENT_RASTER_INDEX</code>
        </p><p>
            <a class="citerefentry" href="glGet"><span class="citerefentry"><span class="refentrytitle">glGet</span></span></a> with argument <code class="constant">GL_CURRENT_RASTER_TEXTURE_COORDS</code>
        </p></div>
        {$pipelinestall}{$examples}
        <div class="refsect1" lang="en" xml:lang="en"><a id="seealso"></a><h2>See Also</h2><p>
            <a class="citerefentry" href="glBitmap"><span class="citerefentry"><span class="refentrytitle">glBitmap</span></span></a>,
            <a class="citerefentry" href="glCopyPixels"><span class="citerefentry"><span class="refentrytitle">glCopyPixels</span></span></a>,
            <a class="citerefentry" href="glDrawArrays"><span class="citerefentry"><span class="refentrytitle">glDrawArrays</span></span></a>,
            <a class="citerefentry" href="glDrawElements"><span class="citerefentry"><span class="refentrytitle">glDrawElements</span></span></a>,
            <a class="citerefentry" href="glDrawRangeElements"><span class="citerefentry"><span class="refentrytitle">glDrawRangeElements</span></span></a>,
            <a class="citerefentry" href="glDrawPixels"><span class="citerefentry"><span class="refentrytitle">glDrawPixels</span></span></a>,
            <a class="citerefentry" href="glMultiTexCoord"><span class="citerefentry"><span class="refentrytitle">glMultiTexCoord</span></span></a>,
            <a class="citerefentry" href="glTexCoord"><span class="citerefentry"><span class="refentrytitle">glTexCoord</span></span></a>,
            <a class="citerefentry" href="glTexGen"><span class="citerefentry"><span class="refentrytitle">glTexGen</span></span></a>,
            <a class="citerefentry" href="glVertex"><span class="citerefentry"><span class="refentrytitle">glVertex</span></span></a>,
            <a class="citerefentry" href="glWindowPos"><span class="citerefentry"><span class="refentrytitle">glWindowPos</span></span></a>
        </p></div><div class="refsect1" lang="en" xml:lang="en"><div id="Copyright"><h2>Copyright</h2><p>
            Copyright © 1991-2006
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <a class="ulink" href="https://web.archive.org/web/20171022161616/http://oss.sgi.com/projects/FreeB/" target="_top">https://web.archive.org/web/20171022161616/http://oss.sgi.com/projects/FreeB/</a>.
        </p></div></div></div>
