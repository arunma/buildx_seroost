<div class="refentry" lang="en" xml:lang="en"><a id="glNormal"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glNormal — set the current normal vector</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glNormal3b</b>(</code></td><td>GLbyte  </td><td><var class="pdparam">nx</var>, </td></tr><tr><td> </td><td>GLbyte  </td><td><var class="pdparam">ny</var>, </td></tr><tr><td> </td><td>GLbyte  </td><td><var class="pdparam">nz</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glNormal3d</b>(</code></td><td>GLdouble  </td><td><var class="pdparam">nx</var>, </td></tr><tr><td> </td><td>GLdouble  </td><td><var class="pdparam">ny</var>, </td></tr><tr><td> </td><td>GLdouble  </td><td><var class="pdparam">nz</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glNormal3f</b>(</code></td><td>GLfloat  </td><td><var class="pdparam">nx</var>, </td></tr><tr><td> </td><td>GLfloat  </td><td><var class="pdparam">ny</var>, </td></tr><tr><td> </td><td>GLfloat  </td><td><var class="pdparam">nz</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glNormal3i</b>(</code></td><td>GLint  </td><td><var class="pdparam">nx</var>, </td></tr><tr><td> </td><td>GLint  </td><td><var class="pdparam">ny</var>, </td></tr><tr><td> </td><td>GLint  </td><td><var class="pdparam">nz</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glNormal3s</b>(</code></td><td>GLshort  </td><td><var class="pdparam">nx</var>, </td></tr><tr><td> </td><td>GLshort  </td><td><var class="pdparam">ny</var>, </td></tr><tr><td> </td><td>GLshort  </td><td><var class="pdparam">nz</var><code>)</code>;</td></tr></table></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl><dt><span class="term"><em class="parameter"><code>nx</code></em>, </span><span class="term"><em class="parameter"><code>ny</code></em>, </span><span class="term"><em class="parameter"><code>nz</code></em></span></dt><dd><p>
                    Specify the
                    <math overflow="scroll"><mi mathvariant="italic">x</mi></math>,
                    <math overflow="scroll"><mi mathvariant="italic">y</mi></math>,
                    and
                    <math overflow="scroll"><mi mathvariant="italic">z</mi></math>
                    coordinates of the new current normal.
                    The initial value of the current normal is the unit vector, (0, 0, 1).
                </p><p>
                </p></dd></dl></div></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glNormal3bv</b>(</code></td><td>const GLbyte *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glNormal3dv</b>(</code></td><td>const GLdouble *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glNormal3fv</b>(</code></td><td>const GLfloat *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glNormal3iv</b>(</code></td><td>const GLint *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glNormal3sv</b>(</code></td><td>const GLshort *  </td><td><var class="pdparam">v</var><code>)</code>;</td></tr></table></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="parameters2"></a><h2>Parameters</h2><div class="variablelist"><dl><dt><span class="term"><em class="parameter"><code>v</code></em></span></dt><dd><p>
                    Specifies a pointer to an array of three elements:
                    the
                    <math overflow="scroll"><mi mathvariant="italic">x</mi></math>,
                    <math overflow="scroll"><mi mathvariant="italic">y</mi></math>,
                    and
                    <math overflow="scroll"><mi mathvariant="italic">z</mi></math>
                    coordinates of the new current normal.
                </p><p>
                </p></dd></dl></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="description"></a><h2>Description</h2><p>
            The current normal is set to the given coordinates
            whenever <code class="function">glNormal</code> is issued.
            Byte, short, or integer arguments are converted to floating-point
            format with a linear mapping that maps the most positive representable integer
            value to 1.0
            and the most negative representable integer value to
            <math overflow="scroll">

                <mn>-1.0</mn>
            </math>.
        </p><p>
            Normals specified with <code class="function">glNormal</code> need not have unit length.
            If <code class="constant">GL_NORMALIZE</code> is enabled,
            then normals of any length specified with <code class="function">glNormal</code> are normalized after transformation.
            If <code class="constant">GL_RESCALE_NORMAL</code> is enabled, normals are scaled by a scaling factor
            derived from the modelview matrix.  <code class="constant">GL_RESCALE_NORMAL</code> requires that the
            originally specified normals were of unit length, and that the modelview
            matrix contain only uniform scales for proper results.
            To enable and disable normalization, call <a class="citerefentry" href="glEnable"><span class="citerefentry"><span class="refentrytitle">glEnable</span></span></a> and <a class="citerefentry" href="glDisable"><span class="citerefentry"><span class="refentrytitle">glDisable</span></span></a>
            with either <code class="constant">GL_NORMALIZE</code> or <code class="constant">GL_RESCALE_NORMAL</code>.
            Normalization is initially disabled.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="notes"></a><h2>Notes</h2><p>
            The current normal can be updated at any time.
            In particular, <code class="function">glNormal</code> can be called between a call to <a class="citerefentry" href="glBegin"><span class="citerefentry"><span class="refentrytitle">glBegin</span></span></a> and
            the corresponding call to <a class="citerefentry" href="glEnd"><span class="citerefentry"><span class="refentrytitle">glEnd</span></span></a>.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="associatedgets"></a><h2>Associated Gets</h2><p>
            <a class="citerefentry" href="glGet"><span class="citerefentry"><span class="refentrytitle">glGet</span></span></a> with argument <code class="constant">GL_CURRENT_NORMAL</code>
        </p><p>
            <a class="citerefentry" href="glIsEnabled"><span class="citerefentry"><span class="refentrytitle">glIsEnabled</span></span></a> with argument <code class="constant">GL_NORMALIZE</code>
        </p><p>
            <a class="citerefentry" href="glIsEnabled"><span class="citerefentry"><span class="refentrytitle">glIsEnabled</span></span></a> with argument <code class="constant">GL_RESCALE_NORMAL</code>
        </p></div>
        {$pipelinestall}{$examples}
        <div class="refsect1" lang="en" xml:lang="en"><a id="seealso"></a><h2>See Also</h2><p>
            <a class="citerefentry" href="glBegin"><span class="citerefentry"><span class="refentrytitle">glBegin</span></span></a>,
            <a class="citerefentry" href="glColor"><span class="citerefentry"><span class="refentrytitle">glColor</span></span></a>,
            <a class="citerefentry" href="glIndex"><span class="citerefentry"><span class="refentrytitle">glIndex</span></span></a>,
            <a class="citerefentry" href="glMultiTexCoord"><span class="citerefentry"><span class="refentrytitle">glMultiTexCoord</span></span></a>,
            <a class="citerefentry" href="glNormalPointer"><span class="citerefentry"><span class="refentrytitle">glNormalPointer</span></span></a>,
            <a class="citerefentry" href="glTexCoord"><span class="citerefentry"><span class="refentrytitle">glTexCoord</span></span></a>,
            <a class="citerefentry" href="glVertex"><span class="citerefentry"><span class="refentrytitle">glVertex</span></span></a>
        </p></div><div class="refsect1" lang="en" xml:lang="en"><div id="Copyright"><h2>Copyright</h2><p>
            Copyright © 1991-2006
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <a class="ulink" href="https://web.archive.org/web/20171022161616/http://oss.sgi.com/projects/FreeB/" target="_top">https://web.archive.org/web/20171022161616/http://oss.sgi.com/projects/FreeB/</a>.
        </p></div></div></div>
