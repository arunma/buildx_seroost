<div class="refentry" lang="en" xml:lang="en"><a id="glMap1"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glMap1 — define a one-dimensional evaluator</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMap1f</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>GLfloat  </td><td><var class="pdparam">u1</var>, </td></tr><tr><td> </td><td>GLfloat  </td><td><var class="pdparam">u2</var>, </td></tr><tr><td> </td><td>GLint  </td><td><var class="pdparam">stride</var>, </td></tr><tr><td> </td><td>GLint  </td><td><var class="pdparam">order</var>, </td></tr><tr><td> </td><td>const GLfloat *  </td><td><var class="pdparam">points</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glMap1d</b>(</code></td><td>GLenum  </td><td><var class="pdparam">target</var>, </td></tr><tr><td> </td><td>GLdouble  </td><td><var class="pdparam">u1</var>, </td></tr><tr><td> </td><td>GLdouble  </td><td><var class="pdparam">u2</var>, </td></tr><tr><td> </td><td>GLint  </td><td><var class="pdparam">stride</var>, </td></tr><tr><td> </td><td>GLint  </td><td><var class="pdparam">order</var>, </td></tr><tr><td> </td><td>const GLdouble *  </td><td><var class="pdparam">points</var><code>)</code>;</td></tr></table></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl><dt><span class="term"><em class="parameter"><code>target</code></em></span></dt><dd><p>
                    Specifies the kind of values that are generated by the evaluator.
                    Symbolic constants
                    <code class="constant">GL_MAP1_VERTEX_3</code>,
                    <code class="constant">GL_MAP1_VERTEX_4</code>,
                    <code class="constant">GL_MAP1_INDEX</code>,
                    <code class="constant">GL_MAP1_COLOR_4</code>,
                    <code class="constant">GL_MAP1_NORMAL</code>,
                    <code class="constant">GL_MAP1_TEXTURE_COORD_1</code>,
                    <code class="constant">GL_MAP1_TEXTURE_COORD_2</code>,
                    <code class="constant">GL_MAP1_TEXTURE_COORD_3</code>, and
                    <code class="constant">GL_MAP1_TEXTURE_COORD_4</code> are accepted.
                </p></dd><dt><span class="term"><em class="parameter"><code>u1</code></em>, </span><span class="term"><em class="parameter"><code>u2</code></em></span></dt><dd><p>
                    Specify a linear mapping of
                    <math overflow="scroll"><mi mathvariant="italic">u</mi></math>,
                    as presented to <a class="citerefentry" href="glEvalCoord1"><span class="citerefentry"><span class="refentrytitle">glEvalCoord1</span></span></a>,
                    to
                    <math overflow="scroll">

                        <mover accent="false"><mi mathvariant="italic">u</mi><mo>^</mo></mover>
                    </math>,
                    the variable that is evaluated by the equations specified by this command.
                </p></dd><dt><span class="term"><em class="parameter"><code>stride</code></em></span></dt><dd><p>
                    Specifies the number of floats or doubles between
                    the beginning of one control point and the beginning of the next one
                    in the data structure referenced in <em class="parameter"><code>points</code></em>.
                    This allows control points to be embedded in arbitrary data structures.
                    The only constraint is that the values for a particular control point
                    must occupy contiguous memory locations.
                </p></dd><dt><span class="term"><em class="parameter"><code>order</code></em></span></dt><dd><p>
                    Specifies the number of control points.
                    Must be positive.
                </p></dd><dt><span class="term"><em class="parameter"><code>points</code></em></span></dt><dd><p>
                    Specifies a pointer to the array of control points.
                </p></dd></dl></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="description"></a><h2>Description</h2><p>
            Evaluators provide a way to use polynomial or rational polynomial mapping
            to produce vertices,
            normals,
            texture coordinates,
            and colors.
            The values produced by an evaluator are sent to further stages
            of GL processing just as if they had been presented using
            <a class="citerefentry" href="glVertex"><span class="citerefentry"><span class="refentrytitle">glVertex</span></span></a>,
            <a class="citerefentry" href="glNormal"><span class="citerefentry"><span class="refentrytitle">glNormal</span></span></a>,
            <a class="citerefentry" href="glTexCoord"><span class="citerefentry"><span class="refentrytitle">glTexCoord</span></span></a>, and
            <a class="citerefentry" href="glColor"><span class="citerefentry"><span class="refentrytitle">glColor</span></span></a> commands,
            except that the generated values do not update the current normal,
            texture coordinates,
            or color.
        </p><p>
            All polynomial or rational polynomial splines of any degree
            (up to the maximum degree supported by the GL implementation)
            can be described using evaluators.
            These include almost all splines used in computer graphics: B-splines,
            Bezier curves, Hermite splines, and so on.
        </p><p>
            Evaluators define curves based on Bernstein polynomials.
            Define
            <math overflow="scroll">

                <mrow>
                    <mi mathvariant="italic">p</mi>
                    <mo>⁡</mo>
                    <mfenced open="(" close=")">
                        <mover accent="false"><mi mathvariant="italic">u</mi><mo>^</mo></mover>
                    </mfenced>
                </mrow>
            </math>
            as
        </p><p>
            </p><div class="informalequation"><math overflow="scroll">

                <mrow>
                    <mrow>
                        <mi mathvariant="italic">p</mi>
                        <mo>⁡</mo>
                        <mfenced open="(" close=")">
                            <mover accent="false"><mi mathvariant="italic">u</mi><mo>^</mo></mover>
                        </mfenced>
                    </mrow>
                    <mo>=</mo>
                    <mrow>
                        <munderover>
                            <mo>Σ</mo>
                            <mrow>
                                <mi mathvariant="italic">i</mi>
                                <mo>=</mo>
                                <mn>0</mn>
                            </mrow>
                            <mi mathvariant="italic">n</mi>
                        </munderover>
                        <mrow>
                            <mrow>
                                <msup><mfenced open="" close="">
                                    <msub><mi mathvariant="italic">B</mi>
                                    <mi mathvariant="italic">i</mi>
                                    </msub>
                                </mfenced>
                                <mi mathvariant="italic">n</mi>
                                </msup>
                                <mo>⁡</mo>
                                <mfenced open="(" close=")">
                                    <mover accent="false"><mi mathvariant="italic">u</mi><mo>^</mo></mover>
                                </mfenced>
                            </mrow>
                            <mo>⁢</mo>
                            <msub><mi mathvariant="italic">R</mi>
                            <mi mathvariant="italic">i</mi>
                            </msub>
                        </mrow>
                    </mrow>
                </mrow>
            </math></div><p>
        </p><p>
        </p><p>
            where
            <math overflow="scroll">

                <msub><mi mathvariant="italic">R</mi>
                <mi mathvariant="italic">i</mi>
                </msub>
            </math>
            is a control point and
            <math overflow="scroll">

                <mrow>
                    <msup><mfenced open="" close="">
                        <msub><mi mathvariant="italic">B</mi>
                        <mi mathvariant="italic">i</mi>
                        </msub>
                    </mfenced>
                    <mi mathvariant="italic">n</mi>
                    </msup>
                    <mo>⁡</mo>
                    <mfenced open="(" close=")">
                        <mover accent="false"><mi mathvariant="italic">u</mi><mo>^</mo></mover>
                    </mfenced>
                </mrow>
            </math>
            is the
            <math overflow="scroll"><mi mathvariant="italic">i</mi></math>th
            Bernstein polynomial of degree
            <math overflow="scroll"><mi mathvariant="italic">n</mi></math>
            (<em class="parameter"><code>order</code></em> =
            <math overflow="scroll">

                <mrow>
                    <mi mathvariant="italic">n</mi>
                    <mo>+</mo>
                    <mn>1</mn>
                </mrow>
            </math>):
        </p><p>
            <math overflow="scroll">

                <mrow>
                    <mrow>
                        <msup><mfenced open="" close="">
                            <msub><mi mathvariant="italic">B</mi>
                            <mi mathvariant="italic">i</mi>
                            </msub>
                        </mfenced>
                        <mi mathvariant="italic">n</mi>
                        </msup>
                        <mo>⁡</mo>
                        <mfenced open="(" close=")">
                            <mover accent="false"><mi mathvariant="italic">u</mi><mo>^</mo></mover>
                        </mfenced>
                    </mrow>
                    <mo>=</mo>
                    <mrow>
                        <mfenced open="(" close=")">
                            <mfenced open="" close="">
                                <mtable>
                                    <mtr><mtd>
                                        <mi mathvariant="italic">n</mi>
                                    </mtd></mtr>
                                    <mtr><mtd>
                                        <mi mathvariant="italic">i</mi>
                                    </mtd></mtr>
                                </mtable>
                            </mfenced>
                        </mfenced>
                        <mo>⁢</mo>
                        <msup><mfenced open="" close="">
                            <mover accent="false"><mi mathvariant="italic">u</mi><mo>^</mo></mover>
                        </mfenced>
                        <mi mathvariant="italic">i</mi>
                        </msup>
                        <mo>⁢</mo>
                        <mfenced open="" close="">
                            <msup><mfenced open="(" close=")">
                                <mrow>
                                    <mn>1</mn>
                                    <mo>-</mo>
                                    <mover accent="false"><mi mathvariant="italic">u</mi><mo>^</mo></mover>
                                </mrow>
                            </mfenced>
                            <mfenced open="" close="">
                                <mrow>
                                    <mi mathvariant="italic">n</mi>
                                    <mo>-</mo>
                                    <mi mathvariant="italic">i</mi>
                                </mrow>
                            </mfenced>
                            </msup>
                        </mfenced>
                    </mrow>
                </mrow>
            </math>
        </p><p>
            Recall that
        </p><p>
            <math overflow="scroll">

                <mrow>
                    <msup><mn>0</mn>
                    <mn>0</mn>
                    </msup>
                    <mo>==</mo>
                    <mn>1</mn>
                </mrow>
            </math>
            and
            <math overflow="scroll">

                <mrow>
                    <mfenced open="(" close=")">
                        <mfenced open="" close="">
                            <mtable>
                                <mtr><mtd>
                                    <mi mathvariant="italic">n</mi>
                                </mtd></mtr>
                                <mtr><mtd>
                                    <mn>0</mn>
                                </mtd></mtr>
                            </mtable>
                        </mfenced>
                    </mfenced>
                    <mo>==</mo>
                    <mn>1</mn>
                </mrow>
            </math>
        </p><p>
            <code class="function">glMap1</code> is used to define the basis and to specify what kind of values
            are produced.
            Once defined,
            a map can be enabled and disabled by calling <a class="citerefentry" href="glEnable"><span class="citerefentry"><span class="refentrytitle">glEnable</span></span></a> and <a class="citerefentry" href="glDisable"><span class="citerefentry"><span class="refentrytitle">glDisable</span></span></a>
            with the map name, one of the nine predefined values for <em class="parameter"><code>target</code></em>
            described below.
            <a class="citerefentry" href="glEvalCoord1"><span class="citerefentry"><span class="refentrytitle">glEvalCoord1</span></span></a> evaluates the one-dimensional maps that are enabled.
            When
            <a class="citerefentry" href="glEvalCoord1"><span class="citerefentry"><span class="refentrytitle">glEvalCoord1</span></span></a> presents a value
            <math overflow="scroll"><mi mathvariant="italic">u</mi></math>,
            the Bernstein functions are evaluated using
            <math overflow="scroll">

                <mover accent="false"><mi mathvariant="italic">u</mi><mo>^</mo></mover>
            </math>,
            where
            <math overflow="scroll">

                <mrow>
                    <mover accent="false"><mi mathvariant="italic">u</mi><mo>^</mo></mover>
                    <mo>=</mo>
                    <mfrac>
                        <mfenced open="" close="">
                            <mrow>
                                <mi mathvariant="italic">u</mi>
                                <mo>-</mo>
                                <mi mathvariant="italic">u1</mi>
                            </mrow>
                        </mfenced>
                        <mfenced open="" close="">
                            <mrow>
                                <mi mathvariant="italic">u2</mi>
                                <mo>-</mo>
                                <mi mathvariant="italic">u1</mi>
                            </mrow>
                        </mfenced>
                    </mfrac>
                </mrow>
            </math>
        </p><p>
            <em class="parameter"><code>target</code></em> is a symbolic constant that indicates what kind of control points
            are provided in <em class="parameter"><code>points</code></em>,
            and what output is generated when the map is evaluated.
            It can assume one of nine predefined values:
        </p><div class="variablelist"><dl><dt><span class="term"><code class="constant">GL_MAP1_VERTEX_3</code></span></dt><dd><p>
                        Each control point is three floating-point values representing
                        <math overflow="scroll"><mi mathvariant="italic">x</mi></math>,
                        <math overflow="scroll"><mi mathvariant="italic">y</mi></math>,
                        and
                        <math overflow="scroll"><mi mathvariant="italic">z</mi></math>.
                        Internal <a class="citerefentry" href="glVertex3"><span class="citerefentry"><span class="refentrytitle">glVertex3</span></span></a> commands are generated when the map is evaluated.
                    </p></dd><dt><span class="term"><code class="constant">GL_MAP1_VERTEX_4</code></span></dt><dd><p>
                        Each control point is four floating-point values representing
                        <math overflow="scroll"><mi mathvariant="italic">x</mi></math>,
                        <math overflow="scroll"><mi mathvariant="italic">y</mi></math>,
                        <math overflow="scroll"><mi mathvariant="italic">z</mi></math>,
                        and
                        <math overflow="scroll"><mi mathvariant="italic">w</mi></math>.
                        Internal <a class="citerefentry" href="glVertex4"><span class="citerefentry"><span class="refentrytitle">glVertex4</span></span></a> commands are generated when the map is evaluated.
                    </p></dd><dt><span class="term"><code class="constant">GL_MAP1_INDEX</code></span></dt><dd><p>
                        Each control point is a single floating-point value representing a color index.
                        Internal <a class="citerefentry" href="glIndex"><span class="citerefentry"><span class="refentrytitle">glIndex</span></span></a> commands are generated when the map is evaluated
                        but the current index is not updated with the value of these <a class="citerefentry" href="glIndex"><span class="citerefentry"><span class="refentrytitle">glIndex</span></span></a>
                        commands.
                    </p></dd><dt><span class="term"><code class="constant">GL_MAP1_COLOR_4</code></span></dt><dd><p>
                        Each control point is four floating-point values representing
                        red, green, blue, and alpha.
                        Internal <a class="citerefentry" href="glColor4"><span class="citerefentry"><span class="refentrytitle">glColor4</span></span></a> commands are generated when the map is
                        evaluated but the current color is not updated with the value of these
                        <a class="citerefentry" href="glColor4"><span class="citerefentry"><span class="refentrytitle">glColor4</span></span></a> commands.
                    </p></dd><dt><span class="term"><code class="constant">GL_MAP1_NORMAL</code></span></dt><dd><p>
                        Each control point is three floating-point values representing
                        the
                        <math overflow="scroll"><mi mathvariant="italic">x</mi></math>,
                        <math overflow="scroll"><mi mathvariant="italic">y</mi></math>,
                        and
                        <math overflow="scroll"><mi mathvariant="italic">z</mi></math>
                        components of a normal vector.
                        Internal <a class="citerefentry" href="glNormal"><span class="citerefentry"><span class="refentrytitle">glNormal</span></span></a> commands are generated when the map is
                        evaluated but the current normal is not updated with the value of
                        these <a class="citerefentry" href="glNormal"><span class="citerefentry"><span class="refentrytitle">glNormal</span></span></a> commands.
                    </p></dd><dt><span class="term"><code class="constant">GL_MAP1_TEXTURE_COORD_1</code></span></dt><dd><p>
                        Each control point is a single floating-point value representing
                        the
                        <math overflow="scroll"><mi mathvariant="italic">s</mi></math>
                        texture coordinate.
                        Internal
                        <a class="citerefentry" href="glTexCoord1"><span class="citerefentry"><span class="refentrytitle">glTexCoord1</span></span></a> commands are generated when the map is
                        evaluated but the current texture coordinates are not updated with the value
                        of these <a class="citerefentry" href="glTexCoord"><span class="citerefentry"><span class="refentrytitle">glTexCoord</span></span></a> commands.
                    </p></dd><dt><span class="term"><code class="constant">GL_MAP1_TEXTURE_COORD_2</code></span></dt><dd><p>
                        Each control point is two floating-point values representing
                        the
                        <math overflow="scroll"><mi mathvariant="italic">s</mi></math>
                        and
                        <math overflow="scroll"><mi mathvariant="italic">t</mi></math>
                        texture coordinates.
                        Internal
                        <a class="citerefentry" href="glTexCoord2"><span class="citerefentry"><span class="refentrytitle">glTexCoord2</span></span></a> commands are generated when the map is
                        evaluated but the current texture coordinates are not updated with the value
                        of these <a class="citerefentry" href="glTexCoord"><span class="citerefentry"><span class="refentrytitle">glTexCoord</span></span></a> commands.
                    </p></dd><dt><span class="term"><code class="constant">GL_MAP1_TEXTURE_COORD_3</code></span></dt><dd><p>
                        Each control point is three floating-point values representing
                        the
                        <math overflow="scroll"><mi mathvariant="italic">s</mi></math>,
                        <math overflow="scroll"><mi mathvariant="italic">t</mi></math>,
                        and
                        <math overflow="scroll"><mi mathvariant="italic">r</mi></math>
                        texture coordinates.
                        Internal <a class="citerefentry" href="glTexCoord3"><span class="citerefentry"><span class="refentrytitle">glTexCoord3</span></span></a> commands are generated when the map is
                        evaluated but the current texture coordinates are not updated with the value
                        of these <a class="citerefentry" href="glTexCoord"><span class="citerefentry"><span class="refentrytitle">glTexCoord</span></span></a> commands.
                    </p></dd><dt><span class="term"><code class="constant">GL_MAP1_TEXTURE_COORD_4</code></span></dt><dd><p>
                        Each control point is four floating-point values representing
                        the
                        <math overflow="scroll"><mi mathvariant="italic">s</mi></math>,
                        <math overflow="scroll"><mi mathvariant="italic">t</mi></math>,
                        <math overflow="scroll"><mi mathvariant="italic">r</mi></math>,
                        and
                        <math overflow="scroll"><mi mathvariant="italic">q</mi></math>
                        texture coordinates.
                        Internal
                        <a class="citerefentry" href="glTexCoord4"><span class="citerefentry"><span class="refentrytitle">glTexCoord4</span></span></a> commands are generated when the map is evaluated but
                        the current texture coordinates are not updated with the value
                        of these <a class="citerefentry" href="glTexCoord"><span class="citerefentry"><span class="refentrytitle">glTexCoord</span></span></a> commands.
                    </p></dd></dl></div><p>
            <em class="parameter"><code>stride</code></em>,
            <em class="parameter"><code>order</code></em>, and
            <em class="parameter"><code>points</code></em> define the array addressing for accessing the control points.
            <em class="parameter"><code>points</code></em> is the location of the first control point,
            which occupies one, two, three, or four contiguous memory locations,
            depending on which map is being defined.
            <em class="parameter"><code>order</code></em> is the number of control points in the array.
            <em class="parameter"><code>stride</code></em> specifies how many float or double locations to advance the internal
            memory pointer to reach the next control point.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="notes"></a><h2>Notes</h2><p>
            As is the case with all GL commands that accept pointers to data,
            it is as if the contents of <em class="parameter"><code>points</code></em> were copied by <code class="function">glMap1</code> before <code class="function">glMap1</code>
            returns.
            Changes to the contents of <em class="parameter"><code>points</code></em> have no effect after <code class="function">glMap1</code> is called.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="errors"></a><h2>Errors</h2><p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if <em class="parameter"><code>target</code></em> is not an accepted value.
        </p><p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if <em class="parameter"><code>u1</code></em> is equal to <em class="parameter"><code>u2</code></em>.
        </p><p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if <em class="parameter"><code>stride</code></em> is less than the number
            of values in a control point.
        </p><p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if <em class="parameter"><code>order</code></em> is less than 1 or
            greater than the return value of <code class="constant">GL_MAX_EVAL_ORDER</code>.
        </p><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if <code class="function">glMap1</code>
            is executed between the execution of
            <a class="citerefentry" href="glBegin"><span class="citerefentry"><span class="refentrytitle">glBegin</span></span></a>
            and the corresponding execution of <a class="citerefentry" href="glEnd"><span class="citerefentry"><span class="refentrytitle">glEnd</span></span></a>.
        </p><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if <code class="function">glMap1</code> is called and the value
            of <code class="constant">GL_ACTIVE_TEXTURE</code> is not <code class="constant">GL_TEXTURE0</code>.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="associatedgets"></a><h2>Associated Gets</h2><p>
            <a class="citerefentry" href="glGetMap"><span class="citerefentry"><span class="refentrytitle">glGetMap</span></span></a>
        </p><p>
            <a class="citerefentry" href="glGet"><span class="citerefentry"><span class="refentrytitle">glGet</span></span></a> with argument <code class="constant">GL_MAX_EVAL_ORDER</code>
        </p><p>
            <a class="citerefentry" href="glIsEnabled"><span class="citerefentry"><span class="refentrytitle">glIsEnabled</span></span></a> with argument <code class="constant">GL_MAP1_VERTEX_3</code>
        </p><p>
            <a class="citerefentry" href="glIsEnabled"><span class="citerefentry"><span class="refentrytitle">glIsEnabled</span></span></a> with argument <code class="constant">GL_MAP1_VERTEX_4</code>
        </p><p>
            <a class="citerefentry" href="glIsEnabled"><span class="citerefentry"><span class="refentrytitle">glIsEnabled</span></span></a> with argument <code class="constant">GL_MAP1_INDEX</code>
        </p><p>
            <a class="citerefentry" href="glIsEnabled"><span class="citerefentry"><span class="refentrytitle">glIsEnabled</span></span></a> with argument <code class="constant">GL_MAP1_COLOR_4</code>
        </p><p>
            <a class="citerefentry" href="glIsEnabled"><span class="citerefentry"><span class="refentrytitle">glIsEnabled</span></span></a> with argument <code class="constant">GL_MAP1_NORMAL</code>
        </p><p>
            <a class="citerefentry" href="glIsEnabled"><span class="citerefentry"><span class="refentrytitle">glIsEnabled</span></span></a> with argument <code class="constant">GL_MAP1_TEXTURE_COORD_1</code>
        </p><p>
            <a class="citerefentry" href="glIsEnabled"><span class="citerefentry"><span class="refentrytitle">glIsEnabled</span></span></a> with argument <code class="constant">GL_MAP1_TEXTURE_COORD_2</code>
        </p><p>
            <a class="citerefentry" href="glIsEnabled"><span class="citerefentry"><span class="refentrytitle">glIsEnabled</span></span></a> with argument <code class="constant">GL_MAP1_TEXTURE_COORD_3</code>
        </p><p>
            <a class="citerefentry" href="glIsEnabled"><span class="citerefentry"><span class="refentrytitle">glIsEnabled</span></span></a> with argument <code class="constant">GL_MAP1_TEXTURE_COORD_4</code>
        </p></div>
        {$pipelinestall}{$examples}
        <div class="refsect1" lang="en" xml:lang="en"><a id="seealso"></a><h2>See Also</h2><p>
            <a class="citerefentry" href="glBegin"><span class="citerefentry"><span class="refentrytitle">glBegin</span></span></a>,
            <a class="citerefentry" href="glColor"><span class="citerefentry"><span class="refentrytitle">glColor</span></span></a>,
            <a class="citerefentry" href="glEnable"><span class="citerefentry"><span class="refentrytitle">glEnable</span></span></a>,
            <a class="citerefentry" href="glEvalCoord"><span class="citerefentry"><span class="refentrytitle">glEvalCoord</span></span></a>,
            <a class="citerefentry" href="glEvalMesh"><span class="citerefentry"><span class="refentrytitle">glEvalMesh</span></span></a>,
            <a class="citerefentry" href="glEvalPoint"><span class="citerefentry"><span class="refentrytitle">glEvalPoint</span></span></a>,
            <a class="citerefentry" href="glMap2"><span class="citerefentry"><span class="refentrytitle">glMap2</span></span></a>,
            <a class="citerefentry" href="glMapGrid"><span class="citerefentry"><span class="refentrytitle">glMapGrid</span></span></a>,
            <a class="citerefentry" href="glNormal"><span class="citerefentry"><span class="refentrytitle">glNormal</span></span></a>,
            <a class="citerefentry" href="glTexCoord"><span class="citerefentry"><span class="refentrytitle">glTexCoord</span></span></a>,
            <a class="citerefentry" href="glVertex"><span class="citerefentry"><span class="refentrytitle">glVertex</span></span></a>
        </p></div><div class="refsect1" lang="en" xml:lang="en"><div id="Copyright"><h2>Copyright</h2><p>
            Copyright © 1991-2006
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <a class="ulink" href="https://web.archive.org/web/20171022161616/http://oss.sgi.com/projects/FreeB/" target="_top">https://web.archive.org/web/20171022161616/http://oss.sgi.com/projects/FreeB/</a>.
        </p></div></div></div>
