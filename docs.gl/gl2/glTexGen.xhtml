<div class="refentry" lang="en" xml:lang="en"><a id="glTexGen"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glTexGen — control the generation of texture coordinates</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glTexGeni</b>(</code></td><td>GLenum  </td><td><var class="pdparam">coord</var>, </td></tr><tr><td> </td><td>GLenum  </td><td><var class="pdparam">pname</var>, </td></tr><tr><td> </td><td>GLint  </td><td><var class="pdparam">param</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glTexGenf</b>(</code></td><td>GLenum  </td><td><var class="pdparam">coord</var>, </td></tr><tr><td> </td><td>GLenum  </td><td><var class="pdparam">pname</var>, </td></tr><tr><td> </td><td>GLfloat  </td><td><var class="pdparam">param</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glTexGend</b>(</code></td><td>GLenum  </td><td><var class="pdparam">coord</var>, </td></tr><tr><td> </td><td>GLenum  </td><td><var class="pdparam">pname</var>, </td></tr><tr><td> </td><td>GLdouble  </td><td><var class="pdparam">param</var><code>)</code>;</td></tr></table></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl><dt><span class="term"><em class="parameter"><code>coord</code></em></span></dt><dd><p>
                    Specifies a texture coordinate.
                    Must be one of <code class="constant">GL_S</code>, <code class="constant">GL_T</code>, <code class="constant">GL_R</code>, or <code class="constant">GL_Q</code>.
                </p></dd><dt><span class="term"><em class="parameter"><code>pname</code></em></span></dt><dd><p>
                    Specifies the symbolic name of the texture-coordinate generation function.
                    Must be <code class="constant">GL_TEXTURE_GEN_MODE</code>.
                </p></dd><dt><span class="term"><em class="parameter"><code>param</code></em></span></dt><dd><p>
                    Specifies a single-valued texture generation parameter,
                    one of <code class="constant">GL_OBJECT_LINEAR</code>, <code class="constant">GL_EYE_LINEAR</code>, <code class="constant">GL_SPHERE_MAP</code>,
                    <code class="constant">GL_NORMAL_MAP</code>, or <code class="constant">GL_REFLECTION_MAP</code>.
                </p></dd></dl></div></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glTexGeniv</b>(</code></td><td>GLenum  </td><td><var class="pdparam">coord</var>, </td></tr><tr><td> </td><td>GLenum  </td><td><var class="pdparam">pname</var>, </td></tr><tr><td> </td><td>const GLint *  </td><td><var class="pdparam">params</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glTexGenfv</b>(</code></td><td>GLenum  </td><td><var class="pdparam">coord</var>, </td></tr><tr><td> </td><td>GLenum  </td><td><var class="pdparam">pname</var>, </td></tr><tr><td> </td><td>const GLfloat *  </td><td><var class="pdparam">params</var><code>)</code>;</td></tr></table></div><div class="funcsynopsis"><table><tr><td><code class="funcdef">void <b class="fsfunc">glTexGendv</b>(</code></td><td>GLenum  </td><td><var class="pdparam">coord</var>, </td></tr><tr><td> </td><td>GLenum  </td><td><var class="pdparam">pname</var>, </td></tr><tr><td> </td><td>const GLdouble *  </td><td><var class="pdparam">params</var><code>)</code>;</td></tr></table></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="parameters2"></a><h2>Parameters</h2><div class="variablelist"><dl><dt><span class="term"><em class="parameter"><code>coord</code></em></span></dt><dd><p>
                    Specifies a texture coordinate.
                    Must be one of <code class="constant">GL_S</code>, <code class="constant">GL_T</code>, <code class="constant">GL_R</code>, or <code class="constant">GL_Q</code>.
                </p></dd><dt><span class="term"><em class="parameter"><code>pname</code></em></span></dt><dd><p>
                    Specifies the symbolic name of the texture-coordinate generation function
                    or function parameters.
                    Must be
                    <code class="constant">GL_TEXTURE_GEN_MODE</code>,
                    <code class="constant">GL_OBJECT_PLANE</code>, or
                    <code class="constant">GL_EYE_PLANE</code>.
                </p></dd><dt><span class="term"><em class="parameter"><code>params</code></em></span></dt><dd><p>
                    Specifies a pointer to an array of texture generation parameters.
                    If <em class="parameter"><code>pname</code></em> is <code class="constant">GL_TEXTURE_GEN_MODE</code>,
                    then the array must contain a single symbolic constant,
                    one of
                    <code class="constant">GL_OBJECT_LINEAR</code>,
                    <code class="constant">GL_EYE_LINEAR</code>,
                    <code class="constant">GL_SPHERE_MAP</code>,
                    <code class="constant">GL_NORMAL_MAP</code>, or
                    <code class="constant">GL_REFLECTION_MAP</code>.
                    Otherwise,
                    <em class="parameter"><code>params</code></em> holds the coefficients for the texture-coordinate generation function
                    specified by <em class="parameter"><code>pname</code></em>.
                </p></dd></dl></div></div><div class="refsect1" lang="en" xml:lang="en"><a id="description"></a><h2>Description</h2><p>
            <code class="function">glTexGen</code> selects a texture-coordinate generation function
            or supplies coefficients for one of the functions.
            <em class="parameter"><code>coord</code></em> names one of the (<span class="emphasis"><em>s</em></span>, <span class="emphasis"><em>t</em></span>, <span class="emphasis"><em>r</em></span>, <span class="emphasis"><em>q</em></span>) texture
            coordinates; it must be one of the symbols
            <code class="constant">GL_S</code>,
            <code class="constant">GL_T</code>,
            <code class="constant">GL_R</code>, or
            <code class="constant">GL_Q</code>.
            <em class="parameter"><code>pname</code></em> must be one of three symbolic constants:
            <code class="constant">GL_TEXTURE_GEN_MODE</code>,
            <code class="constant">GL_OBJECT_PLANE</code>, or
            <code class="constant">GL_EYE_PLANE</code>.
            If <em class="parameter"><code>pname</code></em> is <code class="constant">GL_TEXTURE_GEN_MODE</code>,
            then <em class="parameter"><code>params</code></em> chooses a mode,
            one of
            <code class="constant">GL_OBJECT_LINEAR</code>,
            <code class="constant">GL_EYE_LINEAR</code>,
            <code class="constant">GL_SPHERE_MAP</code>,
            <code class="constant">GL_NORMAL_MAP</code>, or
            <code class="constant">GL_REFLECTION_MAP</code>.
            If <em class="parameter"><code>pname</code></em> is either <code class="constant">GL_OBJECT_PLANE</code> or <code class="constant">GL_EYE_PLANE</code>,
            <em class="parameter"><code>params</code></em> contains coefficients for the corresponding
            texture generation function.
        </p><p>
            If the texture generation function is <code class="constant">GL_OBJECT_LINEAR</code>,
            the function
        </p><p>
            <math overflow="scroll">

                <mrow>
                    <mi mathvariant="italic">g</mi>
                    <mo>=</mo>
                    <mrow>
                        <mrow>
                            <msub><mi mathvariant="italic">p</mi>
                            <mn>1</mn>
                            </msub>
                            <mo>×</mo>
                            <msub><mi mathvariant="italic">x</mi>
                            <mi mathvariant="italic">o</mi>
                            </msub>
                        </mrow>
                        <mo>+</mo>
                        <mrow>
                            <msub><mi mathvariant="italic">p</mi>
                            <mn>2</mn>
                            </msub>
                            <mo>×</mo>
                            <msub><mi mathvariant="italic">y</mi>
                            <mi mathvariant="italic">o</mi>
                            </msub>
                        </mrow>
                        <mo>+</mo>
                        <mrow>
                            <msub><mi mathvariant="italic">p</mi>
                            <mn>3</mn>
                            </msub>
                            <mo>×</mo>
                            <msub><mi mathvariant="italic">z</mi>
                            <mi mathvariant="italic">o</mi>
                            </msub>
                        </mrow>
                        <mo>+</mo>
                        <mrow>
                            <msub><mi mathvariant="italic">p</mi>
                            <mn>4</mn>
                            </msub>
                            <mo>×</mo>
                            <msub><mi mathvariant="italic">w</mi>
                            <mi mathvariant="italic">o</mi>
                            </msub>
                        </mrow>
                    </mrow>
                </mrow>
            </math>
        </p><p>
            is used, where
            <math overflow="scroll"><mi mathvariant="italic">g</mi></math>
            is the value computed for the coordinate named in <em class="parameter"><code>coord</code></em>,
            <math overflow="scroll">

                <msub><mi mathvariant="italic">p</mi>
                <mn>1</mn>
                </msub>
            </math>,
            <math overflow="scroll">

                <msub><mi mathvariant="italic">p</mi>
                <mn>2</mn>
                </msub>
            </math>,
            <math overflow="scroll">

                <msub><mi mathvariant="italic">p</mi>
                <mn>3</mn>
                </msub>
            </math>,
            and
            <math overflow="scroll">

                <msub><mi mathvariant="italic">p</mi>
                <mn>4</mn>
                </msub>
            </math>
            are the four values supplied in <em class="parameter"><code>params</code></em>, and
            <math overflow="scroll">

                <msub><mi mathvariant="italic">x</mi>
                <mi mathvariant="italic">o</mi>
                </msub>
            </math>,
            <math overflow="scroll">

                <msub><mi mathvariant="italic">y</mi>
                <mi mathvariant="italic">o</mi>
                </msub>
            </math>,
            <math overflow="scroll">

                <msub><mi mathvariant="italic">z</mi>
                <mi mathvariant="italic">o</mi>
                </msub>
            </math>,
            and
            <math overflow="scroll">

                <msub><mi mathvariant="italic">w</mi>
                <mi mathvariant="italic">o</mi>
                </msub>
            </math>
            are the object coordinates of the vertex.
            This function can be used, for example, to texture-map terrain using sea level
            as a reference plane
            (defined by
            <math overflow="scroll">

                <msub><mi mathvariant="italic">p</mi>
                <mn>1</mn>
                </msub>
            </math>,
            <math overflow="scroll">

                <msub><mi mathvariant="italic">p</mi>
                <mn>2</mn>
                </msub>
            </math>,
            <math overflow="scroll">

                <msub><mi mathvariant="italic">p</mi>
                <mn>3</mn>
                </msub>
            </math>,
            and
            <math overflow="scroll">

                <msub><mi mathvariant="italic">p</mi>
                <mn>4</mn>
                </msub>
            </math>).
            The altitude of a terrain vertex is computed by the <code class="constant">GL_OBJECT_LINEAR</code>
            coordinate generation function as its distance from sea level;
            that altitude can then be used to index the texture image to map white snow
            onto peaks and green grass onto foothills.
        </p><p>
            If the texture generation function is <code class="constant">GL_EYE_LINEAR</code>, the function
        </p><p>
            </p><div class="informalequation"><math overflow="scroll">

                <mrow>
                    <mi mathvariant="italic">g</mi>
                    <mo>=</mo>
                    <mrow>
                        <mrow>
                            <msup><mfenced open="" close="">
                                <msub><mi mathvariant="italic">p</mi>
                                <mn>1</mn>
                                </msub>
                            </mfenced>
                            <mo>″</mo>
                            </msup>
                            <mo>×</mo>
                            <msub><mi mathvariant="italic">x</mi>
                            <mi mathvariant="italic">e</mi>
                            </msub>
                        </mrow>
                        <mo>+</mo>
                        <mrow>
                            <msup><mfenced open="" close="">
                                <msub><mi mathvariant="italic">p</mi>
                                <mn>2</mn>
                                </msub>
                            </mfenced>
                            <mo>″</mo>
                            </msup>
                            <mo>×</mo>
                            <msub><mi mathvariant="italic">y</mi>
                            <mi mathvariant="italic">e</mi>
                            </msub>
                        </mrow>
                        <mo>+</mo>
                        <mrow>
                            <msup><mfenced open="" close="">
                                <msub><mi mathvariant="italic">p</mi>
                                <mn>3</mn>
                                </msub>
                            </mfenced>
                            <mo>″</mo>
                            </msup>
                            <mo>×</mo>
                            <msub><mi mathvariant="italic">z</mi>
                            <mi mathvariant="italic">e</mi>
                            </msub>
                        </mrow>
                        <mo>+</mo>
                        <mrow>
                            <msup><mfenced open="" close="">
                                <msub><mi mathvariant="italic">p</mi>
                                <mn>4</mn>
                                </msub>
                            </mfenced>
                            <mo>″</mo>
                            </msup>
                            <mo>×</mo>
                            <msub><mi mathvariant="italic">w</mi>
                            <mi mathvariant="italic">e</mi>
                            </msub>
                        </mrow>
                    </mrow>
                </mrow>
            </math></div><p>
        </p><p>
            is used, where
        </p><p>
            </p><div class="informalequation"><math overflow="scroll">

                <mrow>
                    <mfenced open="(" close=")">
                        <mrow>
                            <msup><mfenced open="" close="">
                                <msub><mi mathvariant="italic">p</mi>
                                <mn>1</mn>
                                </msub>
                            </mfenced>
                            <mo>″</mo>
                            </msup>
                            <mo>⁢</mo>
                            <msup><mfenced open="" close="">
                                <msub><mi mathvariant="italic">p</mi>
                                <mn>2</mn>
                                </msub>
                            </mfenced>
                            <mo>″</mo>
                            </msup>
                            <mo>⁢</mo>
                            <msup><mfenced open="" close="">
                                <msub><mi mathvariant="italic">p</mi>
                                <mn>3</mn>
                                </msub>
                            </mfenced>
                            <mo>″</mo>
                            </msup>
                            <mo>⁢</mo>
                            <msup><mfenced open="" close="">
                                <msub><mi mathvariant="italic">p</mi>
                                <mn>4</mn>
                                </msub>
                            </mfenced>
                            <mo>″</mo>
                            </msup>
                        </mrow>
                    </mfenced>
                    <mo>=</mo>
                    <mrow>
                        <mfenced open="(" close=")">
                            <mrow>
                                <msub><mi mathvariant="italic">p</mi>
                                <mn>1</mn>
                                </msub>
                                <mo>⁢</mo>
                                <msub><mi mathvariant="italic">p</mi>
                                <mn>2</mn>
                                </msub>
                                <mo>⁢</mo>
                                <msub><mi mathvariant="italic">p</mi>
                                <mn>3</mn>
                                </msub>
                                <mo>⁢</mo>
                                <msub><mi mathvariant="italic">p</mi>
                                <mn>4</mn>
                                </msub>
                            </mrow>
                        </mfenced>
                        <mo>⁢</mo>
                        <msup><mi mathvariant="italic">M</mi>
                        <mn>-1</mn>
                        </msup>
                    </mrow>
                </mrow>
            </math></div><p>
        </p><p>
            and
            <math overflow="scroll">

                <msub><mi mathvariant="italic">x</mi>
                <mi mathvariant="italic">e</mi>
                </msub>
            </math>,
            <math overflow="scroll">

                <msub><mi mathvariant="italic">y</mi>
                <mi mathvariant="italic">e</mi>
                </msub>
            </math>,
            <math overflow="scroll">

                <msub><mi mathvariant="italic">z</mi>
                <mi mathvariant="italic">e</mi>
                </msub>
            </math>,
            and
            <math overflow="scroll">

                <msub><mi mathvariant="italic">w</mi>
                <mi mathvariant="italic">e</mi>
                </msub>
            </math>
            are the eye coordinates of the vertex,
            <math overflow="scroll">

                <msub><mi mathvariant="italic">p</mi>
                <mn>1</mn>
                </msub>
            </math>,
            <math overflow="scroll">

                <msub><mi mathvariant="italic">p</mi>
                <mn>2</mn>
                </msub>
            </math>,
            <math overflow="scroll">

                <msub><mi mathvariant="italic">p</mi>
                <mn>3</mn>
                </msub>
            </math>,
            and
            <math overflow="scroll">

                <msub><mi mathvariant="italic">p</mi>
                <mn>4</mn>
                </msub>
            </math>
            are the values supplied in <em class="parameter"><code>params</code></em>, and
            <math overflow="scroll"><mi mathvariant="italic">M</mi></math>
            is the modelview matrix when <code class="function">glTexGen</code> is invoked.
            If
            <math overflow="scroll"><mi mathvariant="italic">M</mi></math>
            is poorly conditioned or singular,
            texture coordinates generated by the resulting function may be inaccurate
            or undefined.
        </p><p>
            Note that the values in <em class="parameter"><code>params</code></em> define a reference plane in eye coordinates.
            The modelview matrix that is applied to them may not be the same one
            in effect when the polygon vertices are transformed.
            This function establishes a field of texture coordinates
            that can produce dynamic contour lines on moving objects.
        </p><p>
            If the texture generation function is <code class="constant">GL_SPHERE_MAP</code> and <em class="parameter"><code>coord</code></em> is either
            <code class="constant">GL_S</code> or
            <code class="constant">GL_T</code>,
            <math overflow="scroll"><mi mathvariant="italic">s</mi></math>
            and
            <math overflow="scroll"><mi mathvariant="italic">t</mi></math>
            texture coordinates are generated as follows.
            Let <span class="emphasis"><em>u</em></span> be the unit vector pointing from the origin to the polygon vertex
            (in eye coordinates).
            Let <span class="emphasis"><em>n</em></span> sup prime be the current normal,
            after transformation to eye coordinates.
            Let
        </p><p>
            <math overflow="scroll">

                <mrow>
                    <mi mathvariant="italic">f</mi>
                    <mo>=</mo>
                    <msup><mfenced open="(" close=")">
                        <mrow>
                            <msub><mi mathvariant="italic">f</mi>
                            <mi mathvariant="italic">x</mi>
                            </msub>
                            <mo>⁢</mo>
                            <msub><mi mathvariant="italic">f</mi>
                            <mi mathvariant="italic">y</mi>
                            </msub>
                            <mo>⁢</mo>
                            <msub><mi mathvariant="italic">f</mi>
                            <mi mathvariant="italic">z</mi>
                            </msub>
                        </mrow>
                    </mfenced>
                    <mi mathvariant="italic">T</mi>
                    </msup>
                </mrow>
            </math>
            be the reflection vector such that
        </p><p>
            <math overflow="scroll">

                <mrow>
                    <mi mathvariant="italic">f</mi>
                    <mo>=</mo>
                    <mrow>
                        <mi mathvariant="italic">u</mi>
                        <mo>-</mo>
                        <mn>2</mn>
                        <mo>⁢</mo>
                        <msup><mi mathvariant="italic">n</mi>
                        <mo>″</mo>
                        </msup>
                        <mo>⁢</mo>
                        <msup><mfenced open="" close="">
                            <msup><mi mathvariant="italic">n</mi>
                            <mo>″</mo>
                            </msup>
                        </mfenced>
                        <mi mathvariant="italic">T</mi>
                        </msup>
                        <mo>⁢</mo>
                        <mi mathvariant="italic">u</mi>
                    </mrow>
                </mrow>
            </math>
        </p><p>
            Finally, let
            <math overflow="scroll">

                <mrow>
                    <mi mathvariant="italic">m</mi>
                    <mo>=</mo>
                    <mrow>
                        <mn>2</mn>
                        <mo>⁢</mo>
                        <msqrt>
                            <mfenced open="(" close=")">
                                <mrow>
                                    <msup><mfenced open="" close="">
                                        <msub><mi mathvariant="italic">f</mi>
                                        <mi mathvariant="italic">x</mi>
                                        </msub>
                                    </mfenced>
                                    <mn>2</mn>
                                    </msup>
                                    <mo>+</mo>
                                    <msup><mfenced open="" close="">
                                        <msub><mi mathvariant="italic">f</mi>
                                        <mi mathvariant="italic">y</mi>
                                        </msub>
                                    </mfenced>
                                    <mn>2</mn>
                                    </msup>
                                    <mo>+</mo>
                                    <msup><mfenced open="(" close=")">
                                        <mrow>
                                            <msub><mi mathvariant="italic">f</mi>
                                            <mi mathvariant="italic">z</mi>
                                            </msub>
                                            <mo>+</mo>
                                            <mn>1</mn>
                                        </mrow>
                                    </mfenced>
                                    <mn>2</mn>
                                    </msup>
                                </mrow>
                            </mfenced>
                        </msqrt>
                    </mrow>
                </mrow>
            </math>.
            Then the values assigned to the
            <math overflow="scroll"><mi mathvariant="italic">s</mi></math>
            and
            <math overflow="scroll"><mi mathvariant="italic">t</mi></math>
            texture coordinates are
        </p><p>
            <math overflow="scroll">

                <mrow>
                    <mi mathvariant="italic">s</mi>
                    <mo>=</mo>
                    <mrow>
                        <mfrac>
                            <msub><mi mathvariant="italic">f</mi>
                            <mi mathvariant="italic">x</mi>
                            </msub>
                            <mi mathvariant="italic">m</mi>
                        </mfrac>
                        <mo>+</mo>
                        <mfrac>
                            <mn>1</mn>
                            <mn>2</mn>
                        </mfrac>
                    </mrow>
                </mrow>
            </math>
        </p><p>
            <math overflow="scroll">

                <mrow>
                    <mi mathvariant="italic">t</mi>
                    <mo>=</mo>
                    <mrow>
                        <mfrac>
                            <msub><mi mathvariant="italic">f</mi>
                            <mi mathvariant="italic">y</mi>
                            </msub>
                            <mi mathvariant="italic">m</mi>
                        </mfrac>
                        <mo>+</mo>
                        <mfrac>
                            <mn>1</mn>
                            <mn>2</mn>
                        </mfrac>
                    </mrow>
                </mrow>
            </math>
        </p><p>
            To enable or disable a texture-coordinate generation function, call
            <a href="glEnable"><span class="citerefentry"><span class="refentrytitle">glEnable</span></span></a> or <a href="glDisable"><span class="citerefentry"><span class="refentrytitle">glDisable</span></span></a>
            with one of the symbolic texture-coordinate names
            (<code class="constant">GL_TEXTURE_GEN_S</code>,
            <code class="constant">GL_TEXTURE_GEN_T</code>,
            <code class="constant">GL_TEXTURE_GEN_R</code>, or
            <code class="constant">GL_TEXTURE_GEN_Q</code>) as the argument.
            When enabled,
            the specified texture coordinate is computed
            according to the generating function associated with that coordinate.
            When disabled,
            subsequent vertices take the specified texture coordinate
            from the current set of texture coordinates. Initially, all texture
            generation functions are set to <code class="constant">GL_EYE_LINEAR</code> and are disabled.
            Both
            <math overflow="scroll"><mi mathvariant="italic">s</mi></math>
            plane equations are (1, 0, 0, 0),
            both
            <math overflow="scroll"><mi mathvariant="italic">t</mi></math>
            plane equations are (0, 1, 0, 0),
            and all
            <math overflow="scroll"><mi mathvariant="italic">r</mi></math>
            and
            <math overflow="scroll"><mi mathvariant="italic">q</mi></math>
            plane equations are (0, 0, 0, 0).
        </p><p>
            When the <code class="code">ARB_multitexture</code> extension is supported, <code class="function">glTexGen</code> sets the
            texture generation parameters for the currently active texture unit,
            selected with <a href="glActiveTexture"><span class="citerefentry"><span class="refentrytitle">glActiveTexture</span></span></a>.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="errors"></a><h2>Errors</h2><p>
            <code class="constant">GL_INVALID_ENUM</code> is generated when <em class="parameter"><code>coord</code></em> or <em class="parameter"><code>pname</code></em> is not an
            accepted defined value,
            or when <em class="parameter"><code>pname</code></em> is <code class="constant">GL_TEXTURE_GEN_MODE</code> and <em class="parameter"><code>params</code></em> is not an
            accepted defined value.
        </p><p>
            <code class="constant">GL_INVALID_ENUM</code> is generated when <em class="parameter"><code>pname</code></em> is <code class="constant">GL_TEXTURE_GEN_MODE</code>,
            <em class="parameter"><code>params</code></em> is <code class="constant">GL_SPHERE_MAP</code>,
            and <em class="parameter"><code>coord</code></em> is either <code class="constant">GL_R</code> or <code class="constant">GL_Q</code>.
        </p><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if <code class="function">glTexGen</code>
            is executed between the execution of <a href="glBegin"><span class="citerefentry"><span class="refentrytitle">glBegin</span></span></a>
            and the corresponding execution of <a href="glEnd"><span class="citerefentry"><span class="refentrytitle">glEnd</span></span></a>.
        </p></div><div class="refsect1" lang="en" xml:lang="en"><a id="associatedgets"></a><h2>Associated Gets</h2><p>
            <a href="glGetTexGen"><span class="citerefentry"><span class="refentrytitle">glGetTexGen</span></span></a>
        </p><p>
            <a href="glIsEnabled"><span class="citerefentry"><span class="refentrytitle">glIsEnabled</span></span></a> with argument <code class="constant">GL_TEXTURE_GEN_S</code>
        </p><p>
            <a href="glIsEnabled"><span class="citerefentry"><span class="refentrytitle">glIsEnabled</span></span></a> with argument <code class="constant">GL_TEXTURE_GEN_T</code>
        </p><p>
            <a href="glIsEnabled"><span class="citerefentry"><span class="refentrytitle">glIsEnabled</span></span></a> with argument <code class="constant">GL_TEXTURE_GEN_R</code>
        </p><p>
            <a href="glIsEnabled"><span class="citerefentry"><span class="refentrytitle">glIsEnabled</span></span></a> with argument <code class="constant">GL_TEXTURE_GEN_Q</code>
        </p></div>
        {$pipelinestall}{$examples}
        <div class="refsect1" lang="en" xml:lang="en"><a id="seealso"></a><h2>See Also</h2><p>
            <a href="glActiveTexture"><span class="citerefentry"><span class="refentrytitle">glActiveTexture</span></span></a>,
            <a href="glCopyPixels"><span class="citerefentry"><span class="refentrytitle">glCopyPixels</span></span></a>,
            <a href="glCopyTexImage2D"><span class="citerefentry"><span class="refentrytitle">glCopyTexImage2D</span></span></a>,
            <a href="glCopyTexSubImage1D"><span class="citerefentry"><span class="refentrytitle">glCopyTexSubImage1D</span></span></a>,
            <a href="glCopyTexSubImage2D"><span class="citerefentry"><span class="refentrytitle">glCopyTexSubImage2D</span></span></a>,
            <a href="glCopyTexSubImage3D"><span class="citerefentry"><span class="refentrytitle">glCopyTexSubImage3D</span></span></a>,
            <a href="glTexEnv"><span class="citerefentry"><span class="refentrytitle">glTexEnv</span></span></a>,
            <a href="glTexImage1D"><span class="citerefentry"><span class="refentrytitle">glTexImage1D</span></span></a>,
            <a href="glTexImage2D"><span class="citerefentry"><span class="refentrytitle">glTexImage2D</span></span></a>,
            <a href="glTexImage3D"><span class="citerefentry"><span class="refentrytitle">glTexImage3D</span></span></a>,
            <a href="glTexParameter"><span class="citerefentry"><span class="refentrytitle">glTexParameter</span></span></a>,
            <a href="glTexSubImage1D"><span class="citerefentry"><span class="refentrytitle">glTexSubImage1D</span></span></a>,
            <a href="glTexSubImage2D"><span class="citerefentry"><span class="refentrytitle">glTexSubImage2D</span></span></a>,
            <a href="glTexSubImage3D"><span class="citerefentry"><span class="refentrytitle">glTexSubImage3D</span></span></a>
        </p></div><div class="refsect1" lang="en" xml:lang="en"><div id="Copyright"><h2>Copyright</h2><p>
            Copyright © 1991-2006
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <a href="https://web.archive.org/web/20171022161616/http://oss.sgi.com/projects/FreeB/" target="_top">https://web.archive.org/web/20171022161616/http://oss.sgi.com/projects/FreeB/</a>.
        </p></div></div></div>
