<div class="refentry"><a id="glDeleteRenderbuffers"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glDeleteRenderbuffers — delete named renderbuffer objects</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table class="funcprototype-table" style="cellspacing: 0; cellpadding: 0;"><tr><td><code class="funcdef">void <strong class="fsfunc">glDeleteRenderbuffers</strong>(</code></td><td>GLsizei <var class="pdparam">n</var>, </td></tr><tr><td> </td><td>const GLuint * <var class="pdparam">renderbuffers</var><code>)</code>;</td></tr></table><div class="funcprototype-spacer"> </div></div></div><div class="refsect1"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl class="variablelist"><dt><span class="term"><em class="parameter"><code>n</code></em></span></dt><dd><p>
                    Specifies the number of renderbuffer objects to be deleted.
                </p></dd><dt><span class="term"><em class="parameter"><code>renderbuffers</code></em></span></dt><dd><p>
                    Specifies an array of renderbuffer objects to be deleted.
                </p></dd></dl></div></div><div class="refsect1"><a id="description"></a><h2>Description</h2><p>
            <code class="function">glDeleteRenderbuffers</code> deletes <em class="parameter"><code>n</code></em> renderbuffer objects named by the elements of the array <em class="parameter"><code>renderbuffers</code></em>.
            After a renderbuffer object is deleted, it has no contents,
            and its name is free for reuse (for example by <a class="citerefentry" href="glGenRenderbuffers"><span class="citerefentry"><span class="refentrytitle">glGenRenderbuffers</span></span></a>).
        </p><p>
            If a renderbuffer object that is currently bound is deleted, the binding reverts
            to 0 (the absence of any renderbuffer object). Additionally, special care
            must be taken when deleting a renderbuffer object if the image of the renderbuffer
            is attached to a framebuffer object. In this case, if the deleted renderbuffer object is
            attached to the currently bound framebuffer object, it is
            automatically detached.  However, attachments to any other framebuffer objects are the
            responsibility of the application.
        </p><p>
            <code class="function">glDeleteRenderbuffers</code> silently ignores 0's and names that do not correspond to
            existing renderbuffer objects.
        </p></div><div class="refsect1"><a id="errors"></a><h2>Errors</h2><p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if <em class="parameter"><code>n</code></em> is negative.
        </p></div><div class="refsect1"><a id="associatedgets"></a><h2>Associated Gets</h2><p>
            <a class="citerefentry" href="glIsRenderbuffer"><span class="citerefentry"><span class="refentrytitle">glIsRenderbuffer</span></span></a>
        </p></div>
        {$pipelinestall}{$examples}
        <div class="refsect1"><a id="seealso"></a><h2>See Also</h2><p>
            <a class="citerefentry" href="glBindRenderbuffer"><span class="citerefentry"><span class="refentrytitle">glBindRenderbuffer</span></span></a>,
            <a class="citerefentry" href="glGenRenderbuffers"><span class="citerefentry"><span class="refentrytitle">glGenRenderbuffers</span></span></a>,
            <a class="citerefentry" href="glIsRenderbuffer"><span class="citerefentry"><span class="refentrytitle">glIsRenderbuffer</span></span></a>
        </p></div><div class="refsect1"><div id="Copyright"><h2>Copyright</h2><p>
            Copyright © 2008 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <a class="ulink" href="https://opencontent.org/openpub/" target="_top">https://opencontent.org/openpub/</a>.
        </p></div></div></div>
