<div class="refentry"><a id="glDrawArrays"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glDrawArrays — render primitives from array data</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table class="funcprototype-table" style="cellspacing: 0; cellpadding: 0;"><tr><td><code class="funcdef">void <strong class="fsfunc">glDrawArrays</strong>(</code></td><td>GLenum <var class="pdparam">mode</var>, </td></tr><tr><td> </td><td>GLint <var class="pdparam">first</var>, </td></tr><tr><td> </td><td>GLsizei <var class="pdparam">count</var><code>)</code>;</td></tr></table><div class="funcprototype-spacer"> </div></div></div><div class="refsect1"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl class="variablelist"><dt><span class="term"><em class="parameter"><code>mode</code></em></span></dt><dd><p>
                    Specifies what kind of primitives to render.
                    Symbolic constants
                    <code class="constant">GL_POINTS</code>,
                    <code class="constant">GL_LINE_STRIP</code>,
                    <code class="constant">GL_LINE_LOOP</code>,
                    <code class="constant">GL_LINES</code>,
                    <code class="constant">GL_TRIANGLE_STRIP</code>,
                    <code class="constant">GL_TRIANGLE_FAN</code>, and
                    <code class="constant">GL_TRIANGLES</code> are accepted.
                </p></dd><dt><span class="term"><em class="parameter"><code>first</code></em></span></dt><dd><p>
                    Specifies the starting index in the enabled arrays.
                </p></dd><dt><span class="term"><em class="parameter"><code>count</code></em></span></dt><dd><p>
                    Specifies the number of indices to be rendered.
                </p></dd></dl></div></div><div class="refsect1"><a id="description"></a><h2>Description</h2><p>
            <code class="function">glDrawArrays</code> specifies multiple geometric primitives
            with very few subroutine calls. Instead of calling a GL procedure
            to pass each individual vertex attribute, you can use
            <a class="citerefentry" href="glVertexAttribPointer"><span class="citerefentry"><span class="refentrytitle">glVertexAttribPointer</span></span></a>
            to prespecify separate arrays of vertices, normals, and colors and use them to
            construct a sequence of primitives with a single
            call to <code class="function">glDrawArrays</code>.
        </p><p>
            When <code class="function">glDrawArrays</code> is called, it uses <em class="parameter"><code>count</code></em> sequential elements from each
            enabled array to construct a sequence of geometric primitives,
            beginning with element <em class="parameter"><code>first</code></em>. <em class="parameter"><code>mode</code></em> specifies what kind of
            primitives are constructed and how the array elements
            construct those primitives.
        </p><p>
            To enable and disable a generic vertex attribute array, call
            <a class="citerefentry" href="glEnableVertexAttribArray"><span class="citerefentry"><span class="refentrytitle">glEnableVertexAttribArray</span></span></a>
            and
            <a class="citerefentry" href="glDisableVertexAttribArray"><span class="citerefentry"><span class="refentrytitle">glDisableVertexAttribArray</span></span></a>.
        </p></div><div class="refsect1"><a id="notes"></a><h2>Notes</h2><p>
            If the current program object, as set by
            <a class="citerefentry" href="glUseProgram"><span class="citerefentry"><span class="refentrytitle">glUseProgram</span></span></a>,
            is invalid, rendering results are undefined. However, no error is generated
            for this case.
        </p></div><div class="refsect1"><a id="errors"></a><h2>Errors</h2><p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if <em class="parameter"><code>mode</code></em> is not an accepted value.
        </p><p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if <em class="parameter"><code>count</code></em> is negative.
        </p><p>
            <code class="constant">GL_INVALID_FRAMEBUFFER_OPERATION</code> is generated if
            the currently bound framebuffer is not framebuffer complete (i.e. the
            return value from <a class="citerefentry" href="glCheckFramebufferStatus"><span class="citerefentry"><span class="refentrytitle">glCheckFramebufferStatus</span></span></a>
            is not <code class="constant">GL_FRAMEBUFFER_COMPLETE</code>).
        </p></div>
        {$pipelinestall}{$examples}
        <div class="refsect1"><a id="seealso"></a><h2>See Also</h2><p>
            <a class="citerefentry" href="glCheckFramebufferStatus"><span class="citerefentry"><span class="refentrytitle">glCheckFramebufferStatus</span></span></a>,
            <a class="citerefentry" href="glDisableVertexAttribArray"><span class="citerefentry"><span class="refentrytitle">glDisableVertexAttribArray</span></span></a>,
            <a class="citerefentry" href="glDrawElements"><span class="citerefentry"><span class="refentrytitle">glDrawElements</span></span></a>,
            <a class="citerefentry" href="glEnableVertexAttribArray"><span class="citerefentry"><span class="refentrytitle">glEnableVertexAttribArray</span></span></a>,
            <a class="citerefentry" href="glUseProgram"><span class="citerefentry"><span class="refentrytitle">glUseProgram</span></span></a>,
            <a class="citerefentry" href="glVertexAttribPointer"><span class="citerefentry"><span class="refentrytitle">glVertexAttribPointer</span></span></a>
        </p></div><div class="refsect1"><div id="Copyright"><h2>Copyright</h2><p>
            Copyright © 1991-2006
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <a class="ulink" href="https://web.archive.org/web/20171022161616/http://oss.sgi.com/projects/FreeB/" target="_top">https://web.archive.org/web/20171022161616/http://oss.sgi.com/projects/FreeB/</a>.
        </p></div></div></div>
