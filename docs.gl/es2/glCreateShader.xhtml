<div class="refentry"><a id="glCreateShader"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glCreateShader — create a shader object</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table class="funcprototype-table" style="cellspacing: 0; cellpadding: 0;"><tr><td><code class="funcdef">GLuint <strong class="fsfunc">glCreateShader</strong>(</code></td><td>GLenum <var class="pdparam">shaderType</var><code>)</code>;</td></tr></table><div class="funcprototype-spacer"> </div></div></div><div class="refsect1"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl class="variablelist"><dt><span class="term"><em class="parameter"><code>shaderType</code></em></span></dt><dd><p>Specifies the type of shader to be created.
		    Must be either <code class="constant">GL_VERTEX_SHADER</code>
		    or <code class="constant">GL_FRAGMENT_SHADER</code>.</p></dd></dl></div></div><div class="refsect1"><a id="description"></a><h2>Description</h2><p><code class="function">glCreateShader</code> creates an empty
	shader object and returns a non-zero value by which it can be
	referenced. A shader object is used to maintain the source code
	strings that define a shader. <em class="parameter"><code>shaderType</code></em>
	indicates the type of shader to be created. Two types of shaders
	are supported. A shader of type
	<code class="constant">GL_VERTEX_SHADER</code> is a shader that is
	intended to run on the programmable vertex processor. A shader of
	type <code class="constant">GL_FRAGMENT_SHADER</code> is a shader that is
	intended to run on the programmable fragment processor.</p><p>When created, a shader object's
	<code class="constant">GL_SHADER_TYPE</code> parameter is set to either
	<code class="constant">GL_VERTEX_SHADER</code> or
	<code class="constant">GL_FRAGMENT_SHADER</code>, depending on the value
	of <em class="parameter"><code>shaderType</code></em>.</p></div><div class="refsect1"><a id="notes"></a><h2>Notes</h2><p>Like texture objects, the name space for
	shader objects may be shared across a set of contexts, as long
	as the server sides of the contexts share the same address
	space. If the name space is shared across contexts, any attached
	objects and the data associated with those attached objects are
	shared as well.</p><p>Applications are responsible for providing the
	synchronization across API calls when objects are accessed from
	different execution threads.</p></div><div class="refsect1"><a id="errors"></a><h2>Errors</h2><p>This function returns 0 if an error occurs creating the
	shader object.</p><p><code class="constant">GL_INVALID_ENUM</code> is generated if
	<em class="parameter"><code>shaderType</code></em> is not an accepted value.</p></div><div class="refsect1"><a id="associatedgets"></a><h2>Associated Gets</h2><p><a class="citerefentry" href="glGetShaderiv"><span class="citerefentry"><span class="refentrytitle">glGetShaderiv</span></span></a>
	with a valid shader object and the parameter to be queried</p><p><a class="citerefentry" href="glGetShaderInfoLog"><span class="citerefentry"><span class="refentrytitle">glGetShaderInfoLog</span></span></a>
	with a valid shader object</p><p><a class="citerefentry" href="glGetShaderSource"><span class="citerefentry"><span class="refentrytitle">glGetShaderSource</span></span></a>
	with a valid shader object</p><p><a class="citerefentry" href="glIsShader"><span class="citerefentry"><span class="refentrytitle">glIsShader</span></span></a></p></div>
        {$pipelinestall}{$examples}
        <div class="refsect1"><a id="seealso"></a><h2>See Also</h2><p><a class="citerefentry" href="glAttachShader"><span class="citerefentry"><span class="refentrytitle">glAttachShader</span></span></a>,
	<a class="citerefentry" href="glCompileShader"><span class="citerefentry"><span class="refentrytitle">glCompileShader</span></span></a>,
	<a class="citerefentry" href="glDeleteShader"><span class="citerefentry"><span class="refentrytitle">glDeleteShader</span></span></a>,
	<a class="citerefentry" href="glDetachShader"><span class="citerefentry"><span class="refentrytitle">glDetachShader</span></span></a>,
	<a class="citerefentry" href="glShaderSource"><span class="citerefentry"><span class="refentrytitle">glShaderSource</span></span></a>,
	<a class="citerefentry" href="glShaderBinary"><span class="citerefentry"><span class="refentrytitle">glShaderBinary</span></span></a>
	</p></div><div class="refsect1"><div id="Copyright"><h2>Copyright</h2><p>
            Copyright © 2003-2005 3Dlabs Inc. Ltd.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <a class="ulink" href="https://opencontent.org/openpub/" target="_top">https://opencontent.org/openpub/</a>.
        </p></div></div></div>
