<div class="refentry"><a id="glBindTexture"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glBindTexture — bind a named texture to a texturing target</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table class="funcprototype-table" style="cellspacing: 0; cellpadding: 0;"><tr><td><code class="funcdef">void <strong class="fsfunc">glBindTexture</strong>(</code></td><td>GLenum <var class="pdparam">target</var>, </td></tr><tr><td> </td><td>GLuint <var class="pdparam">texture</var><code>)</code>;</td></tr></table><div class="funcprototype-spacer"> </div></div></div><div class="refsect1"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl class="variablelist"><dt><span class="term"><em class="parameter"><code>target</code></em></span></dt><dd><p>
                    Specifies the target of the active texture unit to which the texture is bound.
                    Must be either
                    <code class="constant">GL_TEXTURE_2D</code> or
                    <code class="constant">GL_TEXTURE_CUBE_MAP</code>.
                </p></dd><dt><span class="term"><em class="parameter"><code>texture</code></em></span></dt><dd><p>
                    Specifies the name of a texture.
                </p></dd></dl></div></div><div class="refsect1"><a id="description"></a><h2>Description</h2><p>
            <code class="function">glBindTexture</code> lets you create or use a named texture. Calling <code class="function">glBindTexture</code> with
            <em class="parameter"><code>target</code></em> set to
            <code class="constant">GL_TEXTURE_2D</code> or
            <code class="constant">GL_TEXTURE_CUBE_MAP</code> and <em class="parameter"><code>texture</code></em> set to the name
            of the new texture binds the texture name to the target of the current active texture unit.
            When a texture is bound to a target, the previous binding for that
            target is automatically broken.
        </p><p>
            Texture names are unsigned integers. The value zero is reserved to
            represent the default texture for each texture target.
            Texture names and the corresponding texture contents are local to
            the shared object space of the current GL rendering context.
        </p><p>
            You may use <a class="citerefentry" href="glGenTextures"><span class="citerefentry"><span class="refentrytitle">glGenTextures</span></span></a> to generate a set of new texture names.
        </p><p>
            When a texture is first bound, it assumes the specified target:
            A texture first bound to <code class="constant">GL_TEXTURE_2D</code> becomes a two-dimensional texture and a
            texture first bound to <code class="constant">GL_TEXTURE_CUBE_MAP</code>
            becomes a cube-mapped texture. The state of a two-dimensional texture
            immediately after it is first bound is equivalent to the state of the
            default <code class="constant">GL_TEXTURE_2D</code> at GL initialization, and similarly for cube-mapped textures.
        </p><p>
            While a texture is bound, GL operations on the target to which it is
            bound affect the bound texture, and queries of the target to which it
            is bound return state from the bound texture.
            In effect, the texture targets become aliases for the textures currently
            bound to them, and the texture name zero refers to the default textures
            that were bound to them at initialization.
        </p><p>
            A texture binding created with <code class="function">glBindTexture</code> remains active until a different
            texture is bound to the same target, or until the bound texture is
            deleted with <a class="citerefentry" href="glDeleteTextures"><span class="citerefentry"><span class="refentrytitle">glDeleteTextures</span></span></a>.
        </p><p>
            Once created, a named texture may be re-bound to its same original target as often as needed.
            It is usually much faster to use <code class="function">glBindTexture</code> to bind an existing named
            texture to one of the texture targets than it is to reload the texture image
            using <a class="citerefentry" href="glTexImage2D"><span class="citerefentry"><span class="refentrytitle">glTexImage2D</span></span></a>.
        </p></div><div class="refsect1"><a id="errors"></a><h2>Errors</h2><p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if <em class="parameter"><code>target</code></em> is not one of the allowable
            values.
        </p><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if <em class="parameter"><code>texture</code></em> was previously created with a target
            that doesn't match that of <em class="parameter"><code>target</code></em>.
        </p></div><div class="refsect1"><a id="associatedgets"></a><h2>Associated Gets</h2><p>
            <a class="citerefentry" href="glGet"><span class="citerefentry"><span class="refentrytitle">glGet</span></span></a> with argument <code class="constant">GL_TEXTURE_BINDING_2D</code> or <code class="constant">GL_TEXTURE_BINDING_CUBE_MAP</code>
        </p></div>
        {$pipelinestall}{$examples}
        <div class="refsect1"><a id="seealso"></a><h2>See Also</h2><p>
            <a class="citerefentry" href="glDeleteTextures"><span class="citerefentry"><span class="refentrytitle">glDeleteTextures</span></span></a>,
            <a class="citerefentry" href="glGenTextures"><span class="citerefentry"><span class="refentrytitle">glGenTextures</span></span></a>,
            <a class="citerefentry" href="glGet"><span class="citerefentry"><span class="refentrytitle">glGet</span></span></a>,
            <a class="citerefentry" href="glGetTexParameter"><span class="citerefentry"><span class="refentrytitle">glGetTexParameter</span></span></a>,
            <a class="citerefentry" href="glIsTexture"><span class="citerefentry"><span class="refentrytitle">glIsTexture</span></span></a>,
            <a class="citerefentry" href="glTexImage2D"><span class="citerefentry"><span class="refentrytitle">glTexImage2D</span></span></a>,
            <a class="citerefentry" href="glTexParameter"><span class="citerefentry"><span class="refentrytitle">glTexParameter</span></span></a>
        </p></div><div class="refsect1"><div id="Copyright"><h2>Copyright</h2><p>
            Copyright © 1991-2006
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <a class="ulink" href="https://web.archive.org/web/20171022161616/http://oss.sgi.com/projects/FreeB/" target="_top">https://web.archive.org/web/20171022161616/http://oss.sgi.com/projects/FreeB/</a>.
        </p></div></div></div>
