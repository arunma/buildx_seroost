<div class="refentry"><a id="glGetProgramiv"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glGetProgramiv — return a parameter from a program object</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table class="funcprototype-table" style="cellspacing: 0; cellpadding: 0;"><tr><td><code class="funcdef">void <strong class="fsfunc">glGetProgramiv</strong>(</code></td><td>GLuint <var class="pdparam">program</var>, </td></tr><tr><td> </td><td>GLenum <var class="pdparam">pname</var>, </td></tr><tr><td> </td><td>GLint *<var class="pdparam">params</var><code>)</code>;</td></tr></table><div class="funcprototype-spacer"> </div></div></div><div class="refsect1"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl class="variablelist"><dt><span class="term"><em class="parameter"><code>program</code></em></span></dt><dd><p>Specifies the program object to be
		    queried.</p></dd><dt><span class="term"><em class="parameter"><code>pname</code></em></span></dt><dd><p>Specifies the object parameter. Accepted
		    symbolic names are
		    <code class="constant">GL_DELETE_STATUS</code>,
		    <code class="constant">GL_LINK_STATUS</code>,
		    <code class="constant">GL_VALIDATE_STATUS</code>,
		    <code class="constant">GL_INFO_LOG_LENGTH</code>,
		    <code class="constant">GL_ATTACHED_SHADERS</code>,
		    <code class="constant">GL_ACTIVE_ATTRIBUTES</code>,
		    <code class="constant">GL_ACTIVE_ATTRIBUTE_MAX_LENGTH</code>,
		    <code class="constant">GL_ACTIVE_UNIFORMS</code>,
		    <code class="constant">GL_ACTIVE_UNIFORM_MAX_LENGTH</code>.</p></dd><dt><span class="term"><em class="parameter"><code>params</code></em></span></dt><dd><p>Returns the requested object parameter.</p></dd></dl></div></div><div class="refsect1"><a id="description"></a><h2>Description</h2><p><code class="function">glGetProgramiv</code>
	returns in <em class="parameter"><code>params</code></em>
	the value of a parameter for a specific program object. The following parameters are defined:</p><div class="variablelist"><dl class="variablelist"><dt><span class="term"><code class="constant">GL_DELETE_STATUS</code></span></dt><dd><p> <em class="parameter"><code>params</code></em> returns
		    <code class="constant">GL_TRUE</code> if
		    <em class="parameter"><code>program</code></em> is currently flagged
		    for deletion, and <code class="constant">GL_FALSE</code>
		    otherwise.</p></dd><dt><span class="term"><code class="constant">GL_LINK_STATUS</code></span></dt><dd><p> <em class="parameter"><code>params</code></em> returns
		    <code class="constant">GL_TRUE</code> if the last link
		    operation on <em class="parameter"><code>program</code></em> was
		    successful, and <code class="constant">GL_FALSE</code>
		    otherwise.</p></dd><dt><span class="term"><code class="constant">GL_VALIDATE_STATUS</code></span></dt><dd><p> <em class="parameter"><code>params</code></em> returns
		    <code class="constant">GL_TRUE</code> or if the last
		    validation operation on
		    <em class="parameter"><code>program</code></em> was successful, and
		    <code class="constant">GL_FALSE</code>
		    otherwise.</p></dd><dt><span class="term"><code class="constant">GL_INFO_LOG_LENGTH</code></span></dt><dd><p> <em class="parameter"><code>params</code></em> returns the
		    number of characters in the information log for
		    <em class="parameter"><code>program</code></em> including the null
		    termination character (i.e., the size of the
		    character buffer required to store the information
		    log). If <em class="parameter"><code>program</code></em> has no
		    information log, a value of 0 is
		    returned.</p></dd><dt><span class="term"><code class="constant">GL_ATTACHED_SHADERS</code></span></dt><dd><p> <em class="parameter"><code>params</code></em> returns the
		    number of shader objects attached to
		    <em class="parameter"><code>program</code></em>.</p></dd><dt><span class="term"><code class="constant">GL_ACTIVE_ATTRIBUTES</code></span></dt><dd><p> <em class="parameter"><code>params</code></em> returns the
		    number of active attribute variables for
		    <em class="parameter"><code>program</code></em>.</p></dd><dt><span class="term"><code class="constant">GL_ACTIVE_ATTRIBUTE_MAX_LENGTH</code></span></dt><dd><p> <em class="parameter"><code>params</code></em> returns the
		    length of the longest active attribute name for
		    <em class="parameter"><code>program</code></em>, including the null
		    termination character (i.e., the size of the
		    character buffer required to store the longest
		    attribute name). If no active attributes exist, 0 is
		    returned.</p></dd><dt><span class="term"><code class="constant">GL_ACTIVE_UNIFORMS</code></span></dt><dd><p> <em class="parameter"><code>params</code></em> returns the
		    number of active uniform variables for
		    <em class="parameter"><code>program</code></em>.</p></dd><dt><span class="term"><code class="constant">GL_ACTIVE_UNIFORM_MAX_LENGTH</code></span></dt><dd><p> <em class="parameter"><code>params</code></em> returns the
		    length of the longest active uniform variable name
		    for <em class="parameter"><code>program</code></em>, including the
		    null termination character (i.e., the size of the
		    character buffer required to store the longest
		    uniform variable name). If no active uniform
		    variables exist, 0 is returned.</p></dd></dl></div></div><div class="refsect1"><a id="notes"></a><h2>Notes</h2><p>If an error is generated, no change is made to the
	contents of <em class="parameter"><code>params</code></em>.</p></div><div class="refsect1"><a id="errors"></a><h2>Errors</h2><p><code class="constant">GL_INVALID_ENUM</code>
	is generated if <em class="parameter"><code>pname</code></em>
	is not an accepted value.</p><p><code class="constant">GL_INVALID_VALUE</code>
	is generated if <em class="parameter"><code>program</code></em>
	is not a value generated by OpenGL.</p><p><code class="constant">GL_INVALID_OPERATION</code>
	is generated if <em class="parameter"><code>program</code></em>
	does not refer to a program object.</p></div><div class="refsect1"><a id="associatedgets"></a><h2>Associated Gets</h2><p><a class="citerefentry" href="glGetActiveAttrib"><span class="citerefentry"><span class="refentrytitle">glGetActiveAttrib</span></span></a>
	with argument <em class="parameter"><code>program</code></em></p><p><a class="citerefentry" href="glGetActiveUniform"><span class="citerefentry"><span class="refentrytitle">glGetActiveUniform</span></span></a>
	with argument <em class="parameter"><code>program</code></em></p><p><a class="citerefentry" href="glGetAttachedShaders"><span class="citerefentry"><span class="refentrytitle">glGetAttachedShaders</span></span></a>
	with argument <em class="parameter"><code>program</code></em></p><p><a class="citerefentry" href="glGetProgramInfoLog"><span class="citerefentry"><span class="refentrytitle">glGetProgramInfoLog</span></span></a>
	with argument <em class="parameter"><code>program</code></em></p><p><a class="citerefentry" href="glIsProgram"><span class="citerefentry"><span class="refentrytitle">glIsProgram</span></span></a>
	<em class="parameter"><code></code></em></p></div>
        {$pipelinestall}{$examples}
        <div class="refsect1"><a id="seealso"></a><h2>See Also</h2><p><a class="citerefentry" href="glAttachShader"><span class="citerefentry"><span class="refentrytitle">glAttachShader</span></span></a>,
	<a class="citerefentry" href="glCreateProgram"><span class="citerefentry"><span class="refentrytitle">glCreateProgram</span></span></a>,
	<a class="citerefentry" href="glDeleteProgram"><span class="citerefentry"><span class="refentrytitle">glDeleteProgram</span></span></a>,
	<a class="citerefentry" href="glGetShaderiv"><span class="citerefentry"><span class="refentrytitle">glGetShaderiv</span></span></a>,
	<a class="citerefentry" href="glLinkProgram"><span class="citerefentry"><span class="refentrytitle">glLinkProgram</span></span></a>,
	<a class="citerefentry" href="glValidateProgram"><span class="citerefentry"><span class="refentrytitle">glValidateProgram</span></span></a></p></div><div class="refsect1"><div id="Copyright"><h2>Copyright</h2><p>
            Copyright © 2003-2005 3Dlabs Inc. Ltd.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <a class="ulink" href="https://opencontent.org/openpub/" target="_top">https://opencontent.org/openpub/</a>.
        </p></div></div></div>
