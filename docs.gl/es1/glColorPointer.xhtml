<div class="refentry" title="glColorPointer"><a id="glColorPointer"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glColorPointer — define an array of colors</p></div><div class="refsynopsisdiv" title="C Specification"><h2>C Specification</h2><div class="funcsynopsis"><table class="funcprototype-table"><tr><td><code class="funcdef">void <b class="fsfunc">glColorPointer</b>(</code></td><td>GLint <var class="pdparam">size</var>, </td></tr><tr><td> </td><td>GLenum <var class="pdparam">type</var>, </td></tr><tr><td> </td><td>GLsizei <var class="pdparam">stride</var>, </td></tr><tr><td> </td><td>const GLvoid * <var class="pdparam">pointer</var><code>)</code>;</td></tr></table><div class="funcprototype-spacer"> </div></div></div><div class="refsect1" title="Parameters"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl><dt><span class="term">
                    <em class="parameter"><code>size</code></em>
                </span></dt><dd><p>Specifies the number of components per color. Must
                    be 4. The initial value is 4.</p></dd><dt><span class="term">
                    <em class="parameter"><code>type</code></em>
                </span></dt><dd><p>Specifies the data type of each color component in
                    the array. Symbolic constants
                    <code class="constant">GL_UNSIGNED_BYTE</code> and
                    <code class="constant">GL_FIXED</code> are accepted.
                    However, the initial value is
                    <code class="constant">GL_FLOAT</code>.</p><p>
                        The common profile accepts the symbolic constant
                        <code class="constant">GL_FLOAT</code> as well.
                    </p></dd><dt><span class="term">
                    <em class="parameter"><code>stride</code></em>
                </span></dt><dd><p>Specifies the byte offset between consecutive colors. If
                    <em class="parameter"><code>stride</code></em>
                    is 0, the colors are understood to be
                    tightly packed in the array. The initial value is 0.</p></dd><dt><span class="term">
                    <em class="parameter"><code>pointer</code></em>
                </span></dt><dd><p>Specifies a pointer to the first component of the
                    first color element in the array.</p></dd></dl></div></div><div class="refsect1" title="Description"><a id="description"></a><h2>Description</h2><p>
        <code class="function">glColorPointer</code>
        specifies the location and data of an array of color components
        to use when rendering.
        <em class="parameter"><code>size</code></em>
        specifies the number of components per color, and must be 4.
        <em class="parameter"><code>type</code></em>
        specifies the data type of each color component, and
        <em class="parameter"><code>stride</code></em>
        specifies the byte stride from one color to the next allowing
        vertices and attributes to be packed into a single array or
        stored in separate arrays. (Single-array storage may be more
        efficient on some implementations.)</p><p>When a color array is specified,
        <em class="parameter"><code>size</code></em>,
        <em class="parameter"><code>type</code></em>,
        <em class="parameter"><code>stride</code></em>, and
        <em class="parameter"><code>pointer</code></em>
        are saved as client-side state.</p><p>
        If the color array is enabled, it is used when
        <a class="citerefentry" href="glDrawArrays"><span class="citerefentry"><span class="refentrytitle">glDrawArrays</span></span></a>,
        or
        <a class="citerefentry" href="glDrawElements"><span class="citerefentry"><span class="refentrytitle">glDrawElements</span></span></a>
        is called.
        To enable and disable the color array, call
        <a class="citerefentry" href="glEnableClientState"><span class="citerefentry"><span class="refentrytitle">glEnableClientState</span></span></a>
        and
        <a class="citerefentry" href="glDisableClientState"><span class="citerefentry"><span class="refentrytitle">glDisableClientState</span></span></a>
        with the argument <code class="constant">GL_COLOR_ARRAY</code>.
        The color array is initially disabled and isn't accessed when
        <a class="citerefentry" href="glDrawArrays"><span class="citerefentry"><span class="refentrytitle">glDrawArrays</span></span></a> or
        <a class="citerefentry" href="glDrawElements"><span class="citerefentry"><span class="refentrytitle">glDrawElements</span></span></a>
        is called.</p><p>Use
        <a class="citerefentry" href="glDrawArrays"><span class="citerefentry"><span class="refentrytitle">glDrawArrays</span></span></a>
        to construct a sequence of primitives (all of the same type)
        from prespecified vertex and vertex attribute arrays. Use
        <a class="citerefentry" href="glDrawElements"><span class="citerefentry"><span class="refentrytitle">glDrawElements</span></span></a>
        to construct a sequence of primitives by indexing vertices and
        vertex attributes.</p></div><div class="refsect1" title="Notes"><a id="notes"></a><h2>Notes</h2><p><code class="function">glColorPointer</code>
        is typically implemented on the client side.</p></div><div class="refsect1" title="Errors"><a id="errors"></a><h2>Errors</h2><p>
        <code class="constant">GL_INVALID_VALUE</code> is generated if
        <em class="parameter"><code>size</code></em> is not 4.</p><p>
        <code class="constant">GL_INVALID_ENUM</code> is generated if
        <em class="parameter"><code>type</code></em> is not an accepted value.</p><p>
        <code class="constant">GL_INVALID_VALUE</code> is generated if
        <em class="parameter"><code>stride</code></em> is negative.</p></div><div class="refsect1" title="See Also"><a id="seealso"></a><h2>See Also</h2><p>
        <a class="citerefentry" href="glColor"><span class="citerefentry"><span class="refentrytitle">glColor</span></span></a>,
        <a class="citerefentry" href="glDrawArrays"><span class="citerefentry"><span class="refentrytitle">glDrawArrays</span></span></a>,
        <a class="citerefentry" href="glDrawElements"><span class="citerefentry"><span class="refentrytitle">glDrawElements</span></span></a>,
        <a class="citerefentry" href="glEnableClientState"><span class="citerefentry"><span class="refentrytitle">glEnableClientState</span></span></a>,
        <a class="citerefentry" href="glNormalPointer"><span class="citerefentry"><span class="refentrytitle">glNormalPointer</span></span></a>,
        <a class="citerefentry" href="glTexCoordPointer"><span class="citerefentry"><span class="refentrytitle">glTexCoordPointer</span></span></a>,
        <a class="citerefentry" href="glVertexPointer"><span class="citerefentry"><span class="refentrytitle">glVertexPointer</span></span></a>
        </p></div><div class="refsect1" title="Copyright"><a id="copyright"></a><h2>Copyright</h2><p>
            Copyright © 2003-2004
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <a class="ulink" href="https://web.archive.org/web/20171022161616/http://oss.sgi.com/projects/FreeB/" target="_top">https://web.archive.org/web/20171022161616/http://oss.sgi.com/projects/FreeB/</a>.
        </p></div></div>
