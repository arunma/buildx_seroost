<div class="refentry" title="glDeleteBuffers"><a id="glDeleteBuffers"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glDeleteBuffers — delete named buffer objects</p></div><div class="refsynopsisdiv" title="C Specification"><h2>C Specification</h2><div class="funcsynopsis"><table class="funcprototype-table"><tr><td><code class="funcdef">void <b class="fsfunc">glDeleteBuffers</b>(</code></td><td>GLsizei <var class="pdparam">n</var>, </td></tr><tr><td> </td><td>const GLuint * <var class="pdparam">buffers</var><code>)</code>;</td></tr></table><div class="funcprototype-spacer"> </div></div></div><div class="refsect1" title="Parameters"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl><dt><span class="term">
                    <em class="parameter"><code>n</code></em>
                </span></dt><dd><p>Specifies the number of buffer objects to be
                    deleted.</p></dd><dt><span class="term">
                    <em class="parameter"><code>buffers</code></em>
                </span></dt><dd><p>Specifies an array of buffer object names to be
                    deleted.</p></dd></dl></div></div><div class="refsect1" title="Description"><a id="description"></a><h2>Description</h2><p>
        <code class="function">glDeleteBuffers</code>
        deletes <em class="parameter"><code>n</code></em>
        buffer objects named by the elements of the array
        <em class="parameter"><code>buffers</code></em>.
        After a buffer object is deleted, it has no contents,
        and its name is free for reuse.</p><p><code class="function">glDeleteBuffers</code>
        silently ignores <code class="constant">zero</code> and names that do not correspond to
        existing buffer objects.</p></div><div class="refsect1" title="Notes"><a id="notes"></a><h2>Notes</h2><p>
        If a buffer object is deleted while it is bound, all
        bindings to that object in the current context (i.e. in the thread that called
        <code class="function">glDeleteBuffers</code>) are reset to zero.
        Bindings to that buffer in other contexts and other
        threads are not affected, but attempting to use a deleted buffer in another thread
        produces undefined results, including but not limited to possible GL errors and
        rendering corruption. Using a deleted buffer in another context or thread may not,
        however, result in program termination.
        </p></div><div class="refsect1" title="Errors"><a id="errors"></a><h2>Errors</h2><p><code class="constant">GL_INVALID_VALUE</code> is generated if
        <em class="parameter"><code>n</code></em> is negative.</p></div><div class="refsect1" title="Associated Gets"><a id="associatedgets"></a><h2>Associated Gets</h2><p>
            <a class="citerefentry" href="glIsBuffer"><span class="citerefentry"><span class="refentrytitle">glIsBuffer</span></span></a>
        </p></div><div class="refsect1" title="See Also"><a id="seealso"></a><h2>See Also</h2><p>
        <a class="citerefentry" href="glBufferData"><span class="citerefentry"><span class="refentrytitle">glBufferData</span></span></a>,
        <a class="citerefentry" href="glBufferSubData"><span class="citerefentry"><span class="refentrytitle">glBufferSubData</span></span></a>,
        <a class="citerefentry" href="glBindBuffer"><span class="citerefentry"><span class="refentrytitle">glBindBuffer</span></span></a>,
        <a class="citerefentry" href="glGenBuffers"><span class="citerefentry"><span class="refentrytitle">glGenBuffers</span></span></a>
        </p></div><div class="refsect1" title="Copyright"><a id="copyright"></a><h2>Copyright</h2><p>
            Copyright © 2003-2004
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <a class="ulink" href="https://web.archive.org/web/20171022161616/http://oss.sgi.com/projects/FreeB/" target="_top">https://web.archive.org/web/20171022161616/http://oss.sgi.com/projects/FreeB/</a>.
        </p></div></div>
